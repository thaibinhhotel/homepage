{"version":3,"sources":["components/ListOption.js","components/RoomDetailCheckin.js","components/ListRoomRows.js","containers/IndexPage.js","components/sha256.js","containers/LoginPage.js","components/admin/PortalEditProduct.js","containers/AdminPage.js","serviceWorker.js","index.js"],"names":["formatNumber","num","toString","replace","ListOption","props","state","items","listoptionIds","slice","optionListSelected","length","option","description","optionid","price","quantity","total","totalOptions","forEach","method","bind","listOptionSlt","this","listOptionSltIds","map","item","push","listOptionIDsTmp","concat","listOptionIDsMerge","filter","pos","indexOf","setState","listoptionIdstmp","listoption","flagNew","i","startsWith","parseInt","onChangeOption","pop","event","data","isNaN","value","toast","info","tmp","optionId","val","total_option","count","Segment","placeholder","textAlign","Grid","columns","relaxed","stackable","Column","Form","Label","Dropdown","options","selection","onChange","handleChangeDropdown","Input","disabled","type","max","min","handleChangeQuantity","Divider","horizontal","size","handleOptionOtherChange","Statistic","Value","Button","content","icon","color","onClick","handleAddRow","Group","Table","striped","bordered","hover","style","width","label","handleRemoveRow","floated","key","Math","random","float","as","tag","hidden","React","Component","Moment","locale","momentLocalizer","isMobile","Android","navigator","userAgent","match","BlackBerry","iOS","Opera","Windows","any","RoomDetailCheckin","show","open","handleCancel","CheckinTimeSelected","roominfo","fromTime","Date","CheckoutTimeSelected","toTime","roomCurrentClass","moreOptionId","JSON","parse","roomDetailOpen","isSubmiting","CheckinDate","substr","getFullYear","getMonth","getDate","CheckinTime","getHours","getMinutes","CheckoutDate","CheckoutTime","checkoutInfo","checkinTime","checkoutTime","roomClass","totalOptionPrice","totalRoomPrice","totalPrice","noteText","roomId","roomid","id","stringify","CheckoutSubmitRoom","error","UpdateCheckInRoom","status","stt","statusList","text","disableCheckout","CheckoutRoom","action","formatted_date","formattedcheckout_date","current_Checkoutdatetime","current_datetime","getSeconds","encoded","cookie","load","result","fetch","body","headers","then","response","a","msgerr","json","roomTypeOther","imgsrc","Modal","closeIcon","onClose","trigger","className","boxShadow","handleShowModal","src","alt","Header","marginLeft","fontWeight","Content","image","scrolling","height","Image","wrapped","TextArea","minHeight","Description","roomDescription","getStatusDes","handleChangeInputDate","name","handleChangeInputTime","onChangePickedTime","padded","display","handleChangeInputCheckoutDate","handleChangeInputCheckoutTime","onChangePickedCheckoutTime","primary","getCheckoutInfo","loading","basic","labelPosition","iconPosition","Select","fluid","handleChangeTypeIDSelect","ribbon","handleChangeOption","Actions","checkinRoomSubmit","handleHideModal","Confirm","Dimmer","active","inverted","Loader","header","onCancel","onConfirm","checkoutRoomSubmit","ListRoomRows","room","roomsInfo","Array","prototype","call","renderDetail","backgroundColor","renderRow","defaultProps","IndexPage","isLoadedRooms","isLoadedParam","rooms","roomIds","statusIds","roomTypeOtherIds","roomidselected","statusSelected","userInfo","token","res","strs","ids","tmp2","newstr","console","log","success","position","POSITION","TOP_RIGHT","handleClearSearching","getListRoomDetails","getlistoption","getroomTypeOther","getListStatus","listRoomIds","listStatusIds","styleDisable","attached","widths","handleChangeRoomIDSelect","handleChangeStatusIDSelect","message","ipadd","getIPAddress","renderSearchForm","renderListRooms","encrypt","string","RotateLeft","lValue","iShiftBits","AddUnsigned","lX","lY","lX4","lY4","lX8","lY8","lResult","FF","b","c","d","x","s","ac","y","z","F","GG","G","HH","H","II","I","WordToHex","lCount","WordToHexValue","WordToHexValue_temp","k","AA","BB","CC","DD","lWordCount","lMessageLength","lNumberOfWords_temp1","lNumberOfWords","lWordArray","lBytePosition","lByteCount","charCodeAt","ConvertToWordArray","utftext","n","String","fromCharCode","Utf8Encode","toLowerCase","LoginPage","errUserMsg","errPassMsg","errpinCode","email","ipAddress","deviceName","userName","passWord","pinCode","isVerified","isChecking","isValid","passWordHash","username","pincode","remove","path","save","maxAge","setTokenValid","handleChangeUser","handleChangePass","handleChangePinCode","submitLogin","verifyEmail","PortalEditProduct","handleClick","prevState","handleClose","isDelete","field1","field2","field3","field4","field5","field6","field7","field8","field9","field10","handleSelectAction","handleChangeSave","handleChangeDelete","Object","values","newrow","keys","onChangeValue","onChangedelete","pointing","Menu","Item","activeItem","TransitionablePortal","left","right","top","margin","headerRow","clearable","CheckDevices","AdminPage","isTokenValid","bodyRow","isDataLoaded","checkTokenValid","getIPAndCheckToken","from","Set","rowheader","tblName","getListAdminEdit","e","getDataAdminByAction","removeIndex","splice","row","includes","jsonString","PassWord","responsive","positive","addItemProduct","handleChangeRowValue","onDelete","handleDeleteRow","onAction","handleAction","colSpan","handleSubmitAllChange","fontSize","tabular","compact","handleItemClick","Icon","renderProductList","href","renderListFunc","clearCookie","RowRender","colls","handleChangeColl","handleChangeDeleteColl","cells","children","coll","tmprow","CollRender","handleChangeInput","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ThaiBinhHotel","ReactDOM","render","document","getElementById","AppMain","exact","component","admin","logout","GreetUser","AcctionBottom","target","URL","process","origin","addEventListener","contentType","get","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.c00a1eab.chunk.js","sourcesContent":["import React from 'react'\nimport {Button, Form, Input, Dropdown, Divider, Grid, Label, Statistic} from 'semantic-ui-react'\nimport PropTypes from \"prop-types\";\nimport TableBT from 'react-bootstrap/Table';\nimport {Segment} from 'semantic-ui-react';\nimport {toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport '../App.css';\n\nfunction formatNumber(num) {\n    return num.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,');\n}\n\nexport class ListOption extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            items: this.props.listoptionIds.slice(0, this.props.optionListSelected.length),\n            option: {\n                description: '',\n                optionid: null,\n                price: 0,\n                quantity: 0,\n                total: 0\n            },\n            listoptionIds: [],\n            optionListSelected: [],\n            totalOptions: 0,\n        };\n        [\n            'handleChangeDropdown',\n            'handleChangeQuantity',\n            'handleAddRow',\n            'handleRemoveRow',\n            'handleOptionOtherChange'\n        ].forEach((method) => this[method] = this[method].bind(this));\n    }\n\n    componentDidMount() {\n        let listOptionSlt = this.props.optionListSelected;\n        let listOptionSltIds = [];\n        listOptionSlt && listOptionSlt.map(item => {\n            listOptionSltIds.push(item[\"optionid\"])\n        })\n\n        var listOptionIDsTmp = listOptionSltIds.concat(this.props.listoptionIds);\n        var listOptionIDsMerge = listOptionIDsTmp.filter((item, pos) => listOptionIDsTmp.indexOf(item) === pos);\n\n        this.setState({\n            items: listOptionIDsMerge.slice(0, this.props.optionListSelected.length)\n        });\n\n\n        var listoptionIdstmp = {};\n        var listoptionIds = [];\n\n        this.props.listoption.map(item => {\n            listoptionIdstmp = {}\n            listoptionIdstmp['key'] = item['optionId'];\n            listoptionIdstmp['text'] = item['description'];\n            listoptionIdstmp['value'] = item['optionId'];\n            listoptionIds.push(listoptionIdstmp);\n        });\n        this.setState({\n            listoptionIds: listoptionIds,\n        });\n\n        //Set value for State: optionListSelected\n        this.setState({\n            optionListSelected: this.props.optionListSelected\n        });\n\n    }\n\n\n    handleAddRow() {\n        const option = {...this.state.option};\n        let optionListSelected = this.state.optionListSelected;\n        let flagNew = true;\n        for (let i = 0; i < optionListSelected.length; i++) {\n            if (optionListSelected[i].optionid == option.optionid) {\n                if(optionListSelected[i].description.startsWith(\"Other\")){\n                    optionListSelected[i].quantity = 1;\n                    optionListSelected[i].total = option.total;\n                } else {\n                    optionListSelected[i].quantity = parseInt(option.quantity) + parseInt(optionListSelected[i].quantity);\n                    optionListSelected[i].total = parseInt(optionListSelected[i].quantity) * parseInt(optionListSelected[i].price);\n                }\n                flagNew = false;\n                break;\n            }\n        }\n\n        if (flagNew) {\n            optionListSelected.push(option);\n        }\n        this.setState({\n            optionListSelected: optionListSelected\n        });\n\n        this.props.onChangeOption(optionListSelected);\n    }\n\n    handleRemoveRow() {\n        const optionListSelected = this.state.optionListSelected;\n        optionListSelected.pop();\n        this.setState({\n            optionListSelected: optionListSelected\n        });\n\n        this.props.onChangeOption(optionListSelected);\n    }\n\n    handleChangeQuantity(event, data) {\n        if(!data){\n            return;\n        }\n        if (isNaN(data.value)) {\n            return\n        } else {\n            if (parseInt(data.value) < 0) {\n                toast.info('Số lượng phải lớn hơn 0.');\n                return;\n            }\n        }\n        let option = {...this.state.option};\n        option['quantity'] = parseInt(data.value);\n        option['total'] = parseInt(data.value) * parseInt(option['price']);\n\n        this.setState({\n            option: option,\n        });\n    }\n\n    handleChangeDropdown(event, data) {\n        const listoption = this.props.listoption;\n        let tmp = [];\n        for (let i = 0; i < listoption.length; i++) {\n            if (listoption[i].optionId == data.value) {\n                tmp = [];\n                tmp = listoption[i];\n                tmp['optionid'] = listoption[i].optionId;\n                tmp['quantity'] = 1;\n                tmp['total'] = tmp['price'];\n                break;\n            }\n        }\n        this.setState({\n            option: tmp,\n        });\n    }\n\n    handleOptionOtherChange(val, data){\n        let tmp = {...this.state.option};\n        tmp['total'] = (parseInt(data.value) ? parseInt(data.value) : 0);\n        this.setState({\n           option: tmp\n        });\n    }\n\n    render() {\n        var total_option = 0;\n        var count = 0;\n        return (\n            <div>\n                <div>\n                    <Segment placeholder textAlign='center'>\n                        <Grid columns={1} relaxed='very' stackable>\n                            <Grid.Column>\n                                <Form>\n                                    <Label>Loại SP:</Label>\n                                    <Dropdown\n                                        options={this.state.listoptionIds}\n                                        value={this.state.option.optionid}\n                                        placeholder='Chọn loại SP:'\n                                        selection\n                                        onChange={this.handleChangeDropdown}\n                                    />\n                                    <br/>\n                                    <br/>\n                                    <Label>Số lượng:</Label>\n                                    <Input\n                                        disabled={this.state.option.optionid == 0 || this.state.option.optionid == null || this.state.option.description.startsWith(\"Other\")}\n                                        placeholder='...'\n                                        type='number'\n                                        max='100'\n                                        min='0'\n                                        value={this.state.option.quantity}\n                                        onChange={this.handleChangeQuantity}\n                                    />\n                                    <br/>\n                                    <br/>\n                                    <Label> Số tiền/1\n                                        sp: <b>{formatNumber(this.state.option.price)} VND</b>\n                                    </Label>\n                                    <br/>\n                                    <br/>\n                                </Form>\n\n                                <Divider horizontal>Tổng:</Divider>\n\n                                {this.state.option.description.startsWith(\"Other\")\n                                    ? <div>\n                                        <Input size=\"small\" type=\"number\" value={this.state.option.total} onChange={this.handleOptionOtherChange}/>\n                                        <br/><br/>\n                                     </div>\n                                    : <Statistic horizontal size='tiny'>\n                                        <Statistic.Value>{formatNumber(this.state.option.total)}</Statistic.Value>\n                                        <Statistic.Label>vnd</Statistic.Label>\n                                     </Statistic>\n                                }\n\n                                <Button content='Thêm' icon='plus square' size='big' color='grey'\n                                        onClick={this.handleAddRow}\n                                        disabled={this.state.option.optionid == 0 || this.state.option.optionid == null || this.state.option.quantity == 0 || this.state.option.total == 0}/>\n                            </Grid.Column>\n                        </Grid>\n                    </Segment>\n                </div>\n                <Button.Group>\n                </Button.Group>\n                {this.state.optionListSelected ? <TableBT size=\"sm\" striped bordered hover style={{width: '100%'}}>\n                    <thead>\n                    <tr>\n                        <th></th>\n                        <th>\n                            <Button\n                                label='Xoá'\n                                disabled={this.state.optionListSelected.length === 0}\n                                icon='minus square'\n                                onClick={this.handleRemoveRow}\n                                floated='right'\n                            />\n                        </th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {this.state.optionListSelected.map((item) => (\n                        <tr key={Math.random()}>\n                            {(item) && (\n                                [<td key={Math.random()}>\n                                    <b>{item.quantity} - {item.description}</b>\n                                </td>,\n                                    <td key={Math.random()}>\n                                        <b style={{float: 'right'}}><Label as='a' color='olive' tag\n                                                                           size='large'>{formatNumber(item.total)} VND</Label></b>\n                                        <p hidden>{count = count + 1} {total_option = total_option + item.total}</p>\n                                    </td>]\n                            )\n                            }\n                        </tr>\n                    ))}\n                    </tbody>\n                    <tfoot>\n                    <tr>\n                        <td></td>\n                        <td>\n                            <b style={{float: 'right'}}><Label as='a' color='yellow' tag\n                                                               size='large'>{formatNumber(total_option)} VND</Label></b>\n                        </td>\n                    </tr>\n                    </tfoot>\n                </TableBT> : <div></div>\n                }\n            </div>\n        )\n    }\n}\n\nListOption.propTypes = {\n    listoptionIds: PropTypes.array,\n    listoption: PropTypes.array,\n    optionListSelected: PropTypes.array,\n    onChangeOption: PropTypes.func,\n}","import React from 'react'\nimport {\n    Button,\n    Form,\n    Header,\n    Image,\n    Input,\n    Label,\n    Modal,\n    Segment,\n    Statistic,\n    TextArea,\n    Confirm, Loader, Dimmer\n} from 'semantic-ui-react'\nimport PropTypes from \"prop-types\";\nimport Moment from 'moment'\nimport momentLocalizer from 'react-widgets-moment';\nimport DateTimePicker from 'react-widgets/lib/DateTimePicker';\nimport 'react-widgets/dist/css/react-widgets.css';\nimport {ListOption} from '../components/ListOption';\nimport 'semantic-ui-css/semantic.min.css';\nimport {toast} from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport '../App.css';\nimport cookie from 'react-cookies';\n\nMoment.locale('vn')\nmomentLocalizer()\n\nfunction formatNumber(num) {\n    return num.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,');\n}\n\nconst isMobile = {\n    Android: function () {\n        return navigator.userAgent.match(/Android/i);\n    },\n    BlackBerry: function () {\n        return navigator.userAgent.match(/BlackBerry/i);\n    },\n    iOS: function () {\n        return navigator.userAgent.match(/iPhone|iPad|iPod/i);\n    },\n    Opera: function () {\n        return navigator.userAgent.match(/Opera Mini/i);\n    },\n    Windows: function () {\n        return navigator.userAgent.match(/IEMobile/i);\n    },\n    any: function () {\n        return (isMobile.Android() || isMobile.BlackBerry() || isMobile.iOS() || isMobile.Opera() || isMobile.Windows());\n    }\n};\n\nexport class RoomDetailCheckin extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: false,\n            CheckinTimeSelected: (this.props.roominfo.fromTime ? new Date(this.props.roominfo.fromTime.replace(/[A-Za-z]/g, ' ')) : new Date()),\n            CheckoutTimeSelected: (this.props.roominfo.toTime ? new Date(this.props.roominfo.toTime.replace(/[A-Za-z]/g, ' ')) : new Date()),\n            roomCurrentClass: (this.props.roominfo.roomCurrentClass ? this.props.roominfo.roomCurrentClass : ''),\n            optionListSelected: (this.props.roominfo.moreOptionId ? JSON.parse(this.props.roominfo.moreOptionId) : ''),\n            roomDetailOpen: false,\n            isSubmiting: false,\n            CheckinDate: (this.props.roominfo.fromTime ? this.props.roominfo.fromTime.substr(0, 10) : ((new Date()).getFullYear() + \"-\" + ((new Date()).getMonth() + 1) + \"-\" + (new Date()).getDate())),\n            CheckinTime: (this.props.roominfo.fromTime ? this.props.roominfo.fromTime.substr(11, 5) : ((new Date()).getHours() + \":\" + ((new Date()).getMinutes()))),\n            CheckoutDate: (this.props.roominfo.toTime ? this.props.roominfo.toTime.substr(0, 10) : ((new Date()).getFullYear() + \"-\" + ((new Date()).getMonth() + 1) + \"-\" + (new Date()).getDate())),\n            CheckoutTime: (this.props.roominfo.toTime ? this.props.roominfo.toTime.substr(11, 5) : ((new Date()).getHours() + \":\" + ((new Date()).getMinutes()))),\n            checkoutInfo: {\n                checkinTime: '',\n                checkoutTime: '',\n                roomClass: '',\n                totalOptionPrice: 0,\n                totalRoomPrice: 0,\n                totalPrice: 0,\n                CheckinTimeSelected: '',\n                CheckoutTimeSelected: '',\n            },\n            noteText: this.props.roominfo.noteText,\n        };\n\n        [\n            'checkinRoomSubmit',\n            'getStatusDes',\n            'onChangePickedTime',\n            'handleChangeTypeIDSelect',\n            'handleChangeOption',\n            'handleShowModal',\n            'handleHideModal',\n            'handleChangeInputDate',\n            'handleChangeInputTime',\n            'handleChangeInputCheckoutDate',\n            'handleChangeInputCheckoutTime',\n            'onChangePickedCheckoutTime',\n            'CheckoutRoom',\n            'getCheckoutInfo',\n            'checkoutRoomSubmit',\n            'disableCheckout'\n        ].forEach((method) => this[method] = this[method].bind(this));\n    }\n\n    show = () => this.setState({open: true})\n    handleCancel = () => this.setState({open: false})\n\n    checkoutRoomSubmit() {\n        this.setState({\n            isSubmiting: true,\n        });\n        let action = 'checkout';\n        let roomId = this.props.roominfo.roomid;\n        let id = this.props.roominfo.id;\n        let noteText = this.state.noteText;\n        let checkinTime = '';\n        let checkoutTime = '';\n        if (isMobile.iOS()) {\n            checkinTime = this.state.CheckinDate + \" \" + this.state.CheckinTime;\n            checkoutTime = this.state.CheckoutDate + \" \" + this.state.CheckoutTime;\n        } else {\n            checkinTime = this.state.CheckinTimeSelected;\n            checkoutTime = this.state.CheckoutTimeSelected;\n        }\n        let roomClass = this.state.roomCurrentClass;\n        let options = JSON.stringify(this.state.optionListSelected);\n\n        let totalOptionPrice = 0;\n        for (let i = 0; i < this.state.optionListSelected.length; i++) {\n            totalOptionPrice = totalOptionPrice + this.state.optionListSelected[i].total;\n        }\n\n        let totalRoomPrice = this.state.checkoutInfo.totalRoomPrice;\n        let totalPrice = this.state.checkoutInfo.totalPrice;\n\n        if (!checkinTime) {\n            toast.error('Bạn chưa chọn giờ vào!');\n            this.setState({\n                isSubmiting: false\n            });\n            return;\n        }\n        if (!checkoutTime) {\n            toast.error('Bạn chưa chọn giờ ra!');\n            this.setState({\n                isSubmiting: false\n            });\n            return;\n        }\n        if (!roomClass) {\n            toast.error('Bạn chưa chọn loại phòng!');\n            this.setState({\n                isSubmiting: false\n            });\n            return;\n        }\n\n        if(!this.state.checkoutInfo.totalRoomPrice || this.state.checkoutInfo.totalRoomPrice == 0){\n            toast.error('Bạn phải tính giá phòng trước khi kết thúc!');\n            this.setState({\n                isSubmiting: false\n            });\n            return;\n        }\n\n        this.props.CheckoutSubmitRoom(id, checkinTime, roomClass, options, totalOptionPrice, roomId, action, checkoutTime, totalRoomPrice, totalPrice, noteText);\n    }\n\n    async checkinRoomSubmit() {\n        this.setState({\n            isSubmiting: true\n        });\n        let roomId = this.props.roominfo.roomid;\n        let id = this.props.roominfo.id;\n        let noteText = this.state.noteText;\n\n        let checkinTime = '';\n        if (isMobile.iOS()) {\n            checkinTime = this.state.CheckinDate + \" \" + this.state.CheckinTime;\n        } else {\n            checkinTime = this.state.CheckinTimeSelected;\n        }\n        let roomClass = this.state.roomCurrentClass;\n        let options = JSON.stringify(this.state.optionListSelected);\n\n        let totalOptionPrice = 0;\n        for (let i = 0; i < this.state.optionListSelected.length; i++) {\n            totalOptionPrice = totalOptionPrice + this.state.optionListSelected[i].total;\n        }\n\n        if (!checkinTime) {\n            toast.error('Bạn chưa chọn giờ vào!');\n            this.setState({\n                isSubmiting: false\n            });\n            return;\n        }\n        if (!roomClass) {\n            toast.error('Bạn chưa chọn loại phòng!');\n            this.setState({\n                isSubmiting: false\n            });\n            return;\n        }\n\n        await this.props.UpdateCheckInRoom(id, checkinTime, roomClass, options, totalOptionPrice, roomId, noteText);\n        // await sleep(5000);\n        this.setState({\n            roomDetailOpen: false,\n            isSubmiting: false\n        });\n    }\n\n    getStatusDes(status = '') {\n        let stt = this.props.statusList;\n        for (var i = 0; i < stt.length; i++) {\n            if (stt[i].key == status) {\n                return stt[i].text;\n            }\n        }\n    }\n\n    disableCheckout() {\n        let checkoutInfo = {...this.state.checkoutInfo};\n        checkoutInfo.totalPrice = 0;\n        this.setState({\n            checkoutInfo: checkoutInfo\n        });\n    }\n\n    onChangePickedTime(val) {\n        this.disableCheckout();\n        this.setState({\n            CheckinTimeSelected: val\n        });\n    }\n\n    onChangePickedCheckoutTime(val) {\n        this.disableCheckout();\n        this.setState({\n            CheckoutTimeSelected: val\n        });\n    }\n\n    handleChangeTypeIDSelect(event, val = null) {\n        if (val == null)\n            return;\n        this.disableCheckout();\n        this.setState({\n            roomCurrentClass: val['value']\n        });\n    }\n\n    handleChangeOption(data = []) {\n        let checkoutInfo = {...this.state.checkoutInfo};\n        let total = 0;\n        for (var i = 0; i < data.length; i++) {\n            total = total + data[i].total;\n        }\n        checkoutInfo['totalPrice'] = checkoutInfo[\"totalRoomPrice\"] + total;\n        this.setState({\n            optionListSelected: data,\n            checkoutInfo: checkoutInfo\n        });\n    }\n\n    handleShowModal() {\n        this.setState({\n            roomDetailOpen: true\n        });\n    }\n\n    handleHideModal() {\n        this.setState({\n            roomDetailOpen: false\n        });\n    }\n\n    handleChangeInputDate(val, data) {\n        this.disableCheckout();\n        this.setState({\n            CheckinDate: data.value\n        });\n    }\n\n    handleChangeInputCheckoutDate(val, data) {\n        this.disableCheckout();\n        this.setState({\n            CheckoutDate: data.value\n        });\n    }\n\n    handleChangeInputCheckoutTime(val, data) {\n        this.disableCheckout();\n        this.setState({\n            CheckoutTime: data.value\n        });\n    }\n\n    handleChangeInputTime(val, data) {\n        this.disableCheckout();\n        this.setState({\n            CheckinTime: data.value\n        });\n    }\n\n    getCheckoutInfo() {\n        this.setState({\n            isSubmiting: true,\n        });\n        let action = 'getTotalConfirm';\n        let roomId = this.props.roominfo.roomid;\n        let id = this.props.roominfo.id;\n        let checkinTime = '';\n        let checkoutTime = '';\n        if (isMobile.iOS()) {\n            checkinTime = this.state.CheckinDate + \" \" + this.state.CheckinTime;\n            checkoutTime = this.state.CheckoutDate + \" \" + this.state.CheckoutTime;\n        } else {\n            checkinTime = this.state.CheckinTimeSelected;\n            checkoutTime = this.state.CheckoutTimeSelected;\n        }\n        let roomClass = this.state.roomCurrentClass;\n        let options = JSON.stringify(this.state.optionListSelected);\n\n        let totalOptionPrice = 0;\n        for (let i = 0; i < this.state.optionListSelected.length; i++) {\n            totalOptionPrice = totalOptionPrice + this.state.optionListSelected[i].total;\n        }\n\n        if (!checkinTime) {\n            toast.error('Bạn chưa chọn giờ vào!');\n            this.setState({\n                isSubmiting: false\n            });\n            return;\n        }\n        if (!checkoutTime) {\n            toast.error('Bạn chưa chọn giờ ra!');\n            this.setState({\n                isSubmiting: false\n            });\n            return;\n        }\n\n        if (checkinTime > checkoutTime) {\n            toast.error('Giờ ra phải sau giờ vào!');\n            this.setState({\n                isSubmiting: false\n            });\n            return;\n        }\n\n        if (!roomClass) {\n            toast.error('Bạn chưa chọn loại phòng!');\n            this.setState({\n                isSubmiting: false\n            });\n            return;\n        }\n\n        this.CheckoutRoom(id, checkinTime, roomClass, options, totalOptionPrice, roomId, action, checkoutTime);\n    }\n\n    async CheckoutRoom(id, checkinTime, roomClass, options, totalOptionPrice, roomId, action, checkoutTime) {\n        let formatted_date = '';\n        let formattedcheckout_date = '';\n        if (isMobile.iOS()) {\n            formatted_date = checkinTime;\n            formattedcheckout_date = checkoutTime;\n        } else {\n            let current_datetime = checkinTime;\n            let current_Checkoutdatetime = checkoutTime;\n            formatted_date = current_datetime.getFullYear() + \"-\" + (current_datetime.getMonth() + 1) + \"-\" + current_datetime.getDate() + \" \" + current_datetime.getHours() + \":\" + current_datetime.getMinutes() + \":\" + current_datetime.getSeconds();\n            formattedcheckout_date = current_Checkoutdatetime.getFullYear() + \"-\" + (current_Checkoutdatetime.getMonth() + 1) + \"-\" + current_Checkoutdatetime.getDate() + \" \" + current_Checkoutdatetime.getHours() + \":\" + current_Checkoutdatetime.getMinutes() + \":\" + current_Checkoutdatetime.getSeconds();\n        }\n\n        let encoded = \"checkinTime=\" + formatted_date +\n            \"&roomClass=\" + roomClass +\n            \"&options=\" + options +\n            \"&token=\" + cookie.load('tokenTBh') +\n            \"&totalOptionPrice=\" + totalOptionPrice +\n            \"&checkoutTime=\" + formattedcheckout_date;\n        let result = '';\n        if (action == \"getTotalConfirm\") {\n            await fetch('https://script.google.com/macros/s/AKfycby1NCjArXNvliviV9Su8imyfVXsNTUL2memG4bxJhX4JTcyoXGr/exec?func=checkoutinfo', {\n                method: 'POST',\n                body: encoded,\n                headers: {\n                    \"Content-type\": \"application/x-www-form-urlencoded\"\n                }\n            }).then(async function (response) {\n                let msgerr = '';\n\n                await response.json().then(function (data) {\n                    data['result'] == 'error' ? msgerr = (JSON.stringify(data[\"error\"][\"message\"]) + JSON.stringify(data[\"error\"])) : result = data['data'];\n                });\n                let stt = response.status;\n                if (stt == 200) {\n                    if (!msgerr) {\n\n                    } else {\n                        toast.error(\"Error:\" + JSON.stringify(msgerr));\n                    }\n                } else {\n                    toast.error(\"Something is wrong, please check log for detail!\");\n                }\n\n            }).then(() => {\n                this.setState({\n                    checkoutInfo: {\n                        checkinTime: checkinTime,\n                        checkoutTime: checkoutTime,\n                        roomClass: roomClass,\n                        totalOptionPrice: totalOptionPrice,\n                        totalRoomPrice: result['roomPrice'],\n                        totalPrice: result['totalPrice'],\n                        CheckinTimeSelected: formatted_date,\n                        CheckoutTimeSelected: formattedcheckout_date,\n                    },\n                    isSubmiting: false\n                });\n            })\n        }\n    }\n\n    render() {\n        const {roominfo, roomTypeOther} = this.props;\n        let imgsrc = roominfo.roomid ? 'images/room' + roominfo.roomid + '.png' : 'images/room101.png';\n\n        return (\n            <Modal style={{width: '100%'}} open={this.state.roomDetailOpen} closeIcon\n                   onClose={() => {\n                       this.setState({roomDetailOpen: false})\n                   }}\n                   trigger={<a className=\"image fit\"><img style={{boxShadow: '10px 10px 5px #ccc'}}\n                                                          onClick={this.handleShowModal}\n                                                          src=\"images/hotelico.jpeg\" alt=\"Hotel\"/></a>}>\n                <Modal.Header>\n                    <Statistic style={{marginLeft: '30%'}} horizontal size='tiny'>\n                        <Statistic.Value style={{\n                            color: \"#00bfff\",\n                            fontWeight: 'bold'\n                        }}>{formatNumber(this.state.checkoutInfo.totalPrice)}</Statistic.Value>\n                        <Statistic.Label>vnd</Statistic.Label>\n                    </Statistic>.\n                </Modal.Header>\n                <Modal.Content image scrolling style={{height: '450%'}}>\n                    <Image size='large' src={imgsrc} wrapped>\n                        <Form>\n                            <TextArea placeholder='Ghi chú...' style={{minHeight: 100}}\n                                      value={this.state.noteText} onChange={(event, data) => {\n                                this.setState({noteText: data.value})\n                            }}/>\n                        </Form>\n                    </Image>\n                    <Modal.Description style={{width: '100%'}}>\n                        <Header>{roominfo.roomDescription}</Header>\n                        <b>\n                            Trạng thái: {this.getStatusDes(roominfo.status)}\n                        </b>\n                        <hr/>\n                        <label>\n                            <b>Giờ vào:</b>\n                        </label>\n                        <div>\n                            {!isMobile.iOS() ? <DateTimePicker value={this.state.CheckinTimeSelected}\n                                                               onChange={this.onChangePickedTime}/> :\n                                <div style={{width: '100%'}}><Input size='huge' style={{width: '50%'}}\n                                                                    onChange={this.handleChangeInputDate}\n                                                                    value={this.state.CheckinDate} type=\"date\"\n                                                                    name=\"CheckinDate\"/>\n                                    <Input size='huge' style={{width: '50%'}} onChange={this.handleChangeInputTime}\n                                           value={this.state.CheckinTime} type=\"time\" name=\"CheckinTime\"/>\n                                </div>\n                            }\n                        </div>\n                        <Segment padded style={{display: this.props.roominfo.status == 0 ? '' : 'none'}}>\n                            <div>\n                                <label>\n                                    <b style={{color: \"#00bfff\"}}>Giờ ra:</b>\n                                </label>\n                                {!isMobile.iOS() ? <DateTimePicker value={this.state.CheckoutTimeSelected}\n                                                                   onChange={this.onChangePickedCheckoutTime}/> :\n                                    <div style={{width: '100%'}}><Input size='huge' style={{width: '50%'}}\n                                                                        onChange={this.handleChangeInputCheckoutDate}\n                                                                        value={this.state.CheckoutDate} type=\"date\"\n                                                                        name=\"CheckoutDate\"/>\n                                        <Input size='huge' style={{width: '50%'}}\n                                               onChange={this.handleChangeInputCheckoutTime}\n                                               value={this.state.CheckoutTime} type=\"time\" name=\"CheckoutTime\"/>\n                                    </div>\n                                }\n                                <br/>\n                                <Button primary style={{float: 'left', width: '45%'}} size=\"large\"\n                                        onClick={this.getCheckoutInfo} disabled={this.state.isSubmiting}>\n                                    Tính tiền phòng:\n                                </Button>\n                                {this.state.isSubmiting ?\n                                    <Input size='large' loading icon='user' disabled\n                                           value={formatNumber(this.state.checkoutInfo.totalRoomPrice)}\n                                           label={{basic: true, content: 'vnd'}}\n                                           labelPosition='right corner'\n                                           iconPosition='left' style={{width: \"53%\"}} placeholder='...vnd'/>\n                                    :\n                                    <Input size=\"large\" icon='money bill alternate outline' disabled\n                                           value={formatNumber(this.state.checkoutInfo.totalRoomPrice)}\n                                           label={{basic: true, content: 'vnd'}}\n                                           labelPosition='right corner'\n                                           iconPosition='left' style={{width: \"53%\"}} placeholder='...vnd'/>\n                                }\n                            </div>\n                        </Segment>\n                        <hr/>\n                        <div>\n                            <label>\n                                <b>Loại phòng:</b>\n                            </label>\n                            <Form.Select\n                                fluid\n                                icon=''\n                                size=\"huge\"\n                                value={this.state.roomCurrentClass}\n                                options={roomTypeOther}\n                                onChange={this.handleChangeTypeIDSelect}\n                                placeholder='Chọn loại phòng...'\n                            />\n                        </div>\n                        <hr/>\n                        <Label as='a' color='teal' ribbon>\n                            Thêm Sản Phẩm:\n                        </Label>\n                        <ListOption listoptionIds={this.props.listoptionIds}\n                                    listoption={this.props.listoption}\n                                    onChangeOption={this.handleChangeOption}\n                                    optionListSelected={this.state.optionListSelected ? this.state.optionListSelected : []}/>\n                    </Modal.Description>\n                </Modal.Content>\n                <Modal.Actions>\n                    <Button primary onClick={this.show}\n                            disabled={this.state.isSubmiting || this.state.checkoutInfo.totalRoomPrice == 0}\n                            style={{display: (this.props.roominfo.status == 0 ? '' : 'none')}}>\n                        CheckOut\n                    </Button>\n                    <Button primary onClick={this.checkinRoomSubmit} disabled={this.state.isSubmiting}>\n                        {this.props.roominfo.status == 1 ? \"CheckIn\" : \"Cập nhật\"}\n                    </Button>\n                    <Button primary onClick={this.handleHideModal} disabled={this.state.isSubmiting}>\n                        Đóng\n                    </Button>\n                </Modal.Actions>\n                <Confirm\n                    open={this.state.open}\n                    content={this.state.isSubmiting ?\n                        <Dimmer active inverted>\n                            <Loader size='large'>Hệ thống đang xử lý.</Loader>\n                        </Dimmer>\n                        :\n                        <div style={{textAlign: 'center'}}>\n                            <Segment>\n                                <h3>\n                                    <table>\n                                        <tbody>\n                                        {!isMobile.iOS() ?\n                                            [<tr key='1'>\n                                                <td>Giờ vào:</td>\n                                                <td>{this.state.checkoutInfo.CheckinTimeSelected}</td>\n                                            </tr>,\n                                                <tr key='2'>\n                                                    <td>Giờ ra:</td>\n                                                    <td>{this.state.checkoutInfo.CheckoutTimeSelected}</td>\n                                                </tr>]\n                                            :\n                                            [<tr key='3'>\n                                                <td>Giờ vào:</td>\n                                                <td>{this.state.checkoutInfo.CheckinTimeSelected}</td>\n                                            </tr>,\n                                                <tr key='4'>\n                                                    <td>Giờ ra:</td>\n                                                    <td>{this.state.checkoutInfo.CheckoutTimeSelected}</td>\n                                                </tr>\n                                            ]}\n                                        <tr>\n                                            <td>Tiền ở:</td>\n                                            <td>{formatNumber(this.state.checkoutInfo.totalRoomPrice)}</td>\n                                        </tr>\n                                        <tr>\n                                            <td>Tiền khác:</td>\n                                            <td>{formatNumber((this.state.checkoutInfo.totalPrice - this.state.checkoutInfo.totalRoomPrice))}</td>\n                                        </tr>\n                                        <tr>\n                                            <td>Tổng tiền:</td>\n                                            <td>{formatNumber(this.state.checkoutInfo.totalPrice)}</td>\n                                        </tr>\n                                        </tbody>\n                                    </table>\n                                </h3>\n                            </Segment>\n                        </div>\n                    }\n                    header='Confirm CheckOut'\n                    onCancel={this.handleCancel}\n                    onConfirm={this.checkoutRoomSubmit}\n                />\n            </Modal>\n        );\n    }\n}\n\n\nRoomDetailCheckin.propTypes = {\n    roominfo: PropTypes.object,\n    statusList: PropTypes.array,\n    roomTypeOther: PropTypes.array,\n    listoptionIds: PropTypes.array,\n    listoption: PropTypes.array,\n    UpdateCheckInRoom: PropTypes.func,\n    CheckoutSubmitRoom: PropTypes.func\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { RoomDetailCheckin } from '../components/RoomDetailCheckin';\nimport 'semantic-ui-css/semantic.min.css';\n\nexport class ListRoomRows extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          open: false\n        };\n\n        [\n            'renderRow',\n            'refreshPage'\n        ].forEach((method) => this[method] = this[method].bind(this));\n    }\n\n    refreshPage(){\n\n    }\n\n    renderDetail(room = []){\n        if(room.status == 1) {\n            return <RoomDetailCheckin roominfo={room}\n                                      statusList={this.props.statusList}\n                                      roomTypeOther={this.props.roomTypeOther}\n                                      listoptionIds={this.props.listoptionIds}\n                                      listoption={this.props.listoption}\n                                      UpdateCheckInRoom={this.props.UpdateCheckInRoom}\n                                      CheckoutSubmitRoom={this.props.CheckoutRoom}/>;\n        }\n        if(room.status == 0) {\n            return <RoomDetailCheckin roominfo={room}\n                                      statusList={this.props.statusList}\n                                      roomTypeOther={this.props.roomTypeOther}\n                                      listoptionIds={this.props.listoptionIds}\n                                      listoption={this.props.listoption}\n                                      UpdateCheckInRoom={this.props.UpdateCheckInRoom}\n                                      CheckoutSubmitRoom={this.props.CheckoutRoom}/>;\n        }\n        if(room.status == 2) {\n\n        }\n    }\n\n    renderRow() {\n        const {roomsInfo} = this.props;\n        return Array.prototype.map.call(roomsInfo, (room) => (\n            <div className=\"col-3 col-12-mobile\" key={room.roomid}>\n                <article className=\"item\">\n                    <div className=\"image fitfull\">\n                        {this.renderDetail(room)}\n                    </div>\n                    <header>\n                        {room.status == 1 ? <h2 style={{backgroundColor: '#e1eaea'}}>{room.roomid}</h2> : <h2 style={{backgroundColor: '#ffd633'}}>{room.roomid}</h2>}\n                    </header>\n                </article>\n            </div>\n        ));\n    }\n\n    render() {\n        return (\n            <div className=\"row\">\n                {this.renderRow()}\n            </div>\n\n        );\n    }\n}\n\nListRoomRows.defaultProps = {\n    roomsInfo: []\n}\n\nListRoomRows.propTypes = {\n    roomsInfo: PropTypes.array,\n    statusList: PropTypes.array,\n    roomTypeOther: PropTypes.array,\n    listoptionIds: PropTypes.array,\n    listoption: PropTypes.array,\n    UpdateCheckInRoom: PropTypes.func,\n    CheckoutRoom: PropTypes.func\n}\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Form, Image, Loader, Segment, Dimmer, Label} from 'semantic-ui-react';\nimport {ListRoomRows} from '../components/ListRoomRows';\nimport 'semantic-ui-css/semantic.min.css';\nimport {toast} from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport '../App.css';\n\nconst isMobile = {\n    Android: function () {\n        return navigator.userAgent.match(/Android/i);\n    },\n    BlackBerry: function () {\n        return navigator.userAgent.match(/BlackBerry/i);\n    },\n    iOS: function () {\n        return navigator.userAgent.match(/iPhone|iPad|iPod/i);\n    },\n    Opera: function () {\n        return navigator.userAgent.match(/Opera Mini/i);\n    },\n    Windows: function () {\n        return navigator.userAgent.match(/IEMobile/i);\n    },\n    any: function () {\n        return (isMobile.Android() || isMobile.BlackBerry() || isMobile.iOS() || isMobile.Opera() || isMobile.Windows());\n    }\n};\n\nexport class IndexPage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isLoadedRooms: false,\n            isLoadedParam: false,\n            roomDetailOpen: false,\n            rooms: [],\n            roomIds: [],\n            status: [],\n            statusIds: [],\n            roomTypeOther: [],\n            roomTypeOtherIds: [],\n            listoption: [],\n            listoptionIds: [],\n            roomidselected: '',\n            statusSelected: ''\n        };\n\n        [\n            'getListRoomDetails',\n            'UpdateCheckInRoom',\n            'handleChangeRoomIDSelect',\n            'handleChangeStatusIDSelect',\n            'getListStatus',\n            'renderSearchForm',\n            'renderListRooms',\n            'getroomTypeOther',\n            'getlistoption',\n            'handleClearSearching',\n            'CheckoutRoom',\n            'getIPAddress',\n            'sha256'\n        ].forEach((method) => this[method] = this[method].bind(this));\n    }\n\n    async getListRoomDetails(filter) {\n        this.setState({\n            isLoadedRooms: false,\n        });\n        await fetch(\"https://script.google.com/macros/s/AKfycby1NCjArXNvliviV9Su8imyfVXsNTUL2memG4bxJhX4JTcyoXGr/exec?func=listRoomsDetail&token=\" + this.props.userInfo.token)\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    let strs = [];\n                    let ids = [];\n                    let tmp = [];\n                    let tmp2 = {};\n                    for (let i = 0; i < result.length; i++) {\n                        tmp = JSON.parse(result[i])\n                        strs.push(tmp);\n                        tmp2 = {};\n                        tmp2['key'] = tmp['roomid'];\n                        tmp2['text'] = tmp['roomDescription'];\n                        tmp2['value'] = tmp['roomid'];\n                        ids.push(tmp2);\n                    }\n                    if (filter) {\n                        let newstr = strs.filter(function (item) {\n                            return item[filter.id] == filter.value;\n                        });\n                        this.setState({\n                            isLoadedRooms: true,\n                            rooms: newstr,\n                            roomIds: ids\n                        });\n                    } else {\n                        this.setState({\n                            isLoadedRooms: true,\n                            rooms: strs,\n                            roomIds: ids\n                        });\n                    }\n                }, (error) => {\n                    console.log(error);\n                    this.setState({\n                        isLoadedRooms: false,\n                    });\n                }\n            )\n    }\n\n    getListStatus() {\n        fetch(\"https://script.google.com/macros/s/AKfycby1NCjArXNvliviV9Su8imyfVXsNTUL2memG4bxJhX4JTcyoXGr/exec?func=listStatus&token=\" + this.props.userInfo.token)\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    let strs = [];\n                    let ids = [];\n                    let tmp = [];\n                    let tmp2 = {};\n                    for (let i = 0; i < result.length; i++) {\n                        tmp = JSON.parse(result[i])\n                        strs.push(tmp);\n                        tmp2 = {};\n                        tmp2['key'] = tmp['statusId'];\n                        tmp2['text'] = tmp['description'];\n                        tmp2['value'] = tmp['statusId'];\n                        ids.push(tmp2);\n                    }\n                    this.setState({\n                        isLoadedParam: true,\n                        status: strs,\n                        statusIds: ids\n                    });\n                }, (error) => {\n                    this.setState({\n                        isLoadedParam: false,\n                    });\n                }\n            )\n    }\n\n    getlistoption() {\n        fetch(\"https://script.google.com/macros/s/AKfycby1NCjArXNvliviV9Su8imyfVXsNTUL2memG4bxJhX4JTcyoXGr/exec?func=listoption&token=\" + this.props.userInfo.token)\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    let strs = [];\n                    let ids = [];\n                    let tmp = [];\n                    for (let i = 0; i < result.length; i++) {\n                        tmp = JSON.parse(result[i])\n                        strs.push(tmp);\n                        ids.push(tmp['optionId']);\n                    }\n                    this.setState({\n                        isLoadedParam: true,\n                        listoption: strs,\n                        listoptionIds: ids\n                    });\n                }, (error) => {\n                    this.setState({\n                        isLoadedParam: false,\n                    });\n                }\n            )\n    }\n\n    getroomTypeOther() {\n        fetch(\"https://script.google.com/macros/s/AKfycby1NCjArXNvliviV9Su8imyfVXsNTUL2memG4bxJhX4JTcyoXGr/exec?func=PricebyOther&token=\" + this.props.userInfo.token)\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    let strs = [];\n                    let ids = [];\n                    let tmp = [];\n                    let tmp2 = {};\n                    for (let i = 0; i < result.length; i++) {\n                        tmp = JSON.parse(result[i])\n                        strs.push(tmp);\n                        tmp2 = {};\n                        tmp2['key'] = tmp['roomType'];\n                        tmp2['text'] = tmp['description'];\n                        tmp2['value'] = tmp['roomType'];\n                        ids.push(tmp2);\n                    }\n                    this.setState({\n                        isLoadedParam: true,\n                        roomTypeOther: strs,\n                        roomTypeOtherIds: ids\n                    });\n                }, (error) => {\n                    this.setState({\n                        isLoadedParam: false,\n                    });\n                }\n            )\n    }\n\n    async UpdateCheckInRoom(id, checkinTime, roomClass, options, totalOptionPrice, roomId, noteText) {\n        let formatted_date = '';\n        if (isMobile.iOS()) {\n            formatted_date = checkinTime;\n        } else {\n            let current_datetime = checkinTime;\n            formatted_date = current_datetime.getFullYear() + \"-\" + (current_datetime.getMonth() + 1) + \"-\" + current_datetime.getDate() + \" \" + current_datetime.getHours() + \":\" + current_datetime.getMinutes() + \":\" + current_datetime.getSeconds();\n        }\n\n        let encoded = \"checkinTime=\" + formatted_date +\n            \"&roomClass=\" + roomClass +\n            \"&options=\" + options +\n            \"&noteText=\" + noteText +\n            \"&token=\" + this.props.userInfo.token +\n            \"&totalOptionPrice=\" + totalOptionPrice;\n\n        await fetch('https://script.google.com/macros/s/AKfycby1NCjArXNvliviV9Su8imyfVXsNTUL2memG4bxJhX4JTcyoXGr/exec?func=checkin&id=' + id, {\n            method: 'POST',\n            body: encoded,\n            headers: {\n                \"Content-type\": \"application/x-www-form-urlencoded\"\n            }\n        }).then(async function (response) {\n            let msgerr = '';\n            let isSuccess = false;\n            await response.json().then(function (data) {\n                data['result'] == 'error' ? msgerr = (JSON.stringify(data[\"error\"][\"message\"]) + JSON.stringify(data[\"error\"])) : isSuccess = true;\n            });\n\n            let stt = response.status;\n            if (stt == 200) {\n                if (!msgerr) {\n                    toast.success(\"Đặt phòng \" + roomId + \" thành công!\", {position: toast.POSITION.TOP_RIGHT});\n                } else {\n                    toast.error(\"Error:\" + JSON.stringify(msgerr));\n                }\n            } else {\n                toast.error(\"Something is wrong, please check log for detail!\");\n            }\n\n        }).then(() => {\n            this.handleClearSearching();\n        })\n    }\n\n    async CheckoutRoom(id, checkinTime, roomClass, options, totalOptionPrice, roomId, action, checkoutTime, totalRoomPrice, totalPrice, noteText) {\n        let formatted_date = '';\n        let formattedcheckout_date = '';\n        if (isMobile.iOS()) {\n            formatted_date = checkinTime;\n            formattedcheckout_date = checkoutTime;\n        } else {\n            let current_datetime = checkinTime;\n            let current_Checkoutdatetime = checkoutTime;\n            formatted_date = current_datetime.getFullYear() + \"-\" + (current_datetime.getMonth() + 1) + \"-\" + current_datetime.getDate() + \" \" + current_datetime.getHours() + \":\" + current_datetime.getMinutes() + \":\" + current_datetime.getSeconds();\n            formattedcheckout_date = current_Checkoutdatetime.getFullYear() + \"-\" + (current_Checkoutdatetime.getMonth() + 1) + \"-\" + current_Checkoutdatetime.getDate() + \" \" + current_Checkoutdatetime.getHours() + \":\" + current_Checkoutdatetime.getMinutes() + \":\" + current_Checkoutdatetime.getSeconds();\n        }\n\n        let encoded = \"checkinTime=\" + formatted_date +\n            \"&roomClass=\" + roomClass +\n            \"&roomId=\" + roomId +\n            \"&options=\" + options +\n            \"&totalOptionPrice=\" + totalOptionPrice +\n            \"&totalRoomPrice=\" + totalRoomPrice +\n            \"&totalPrice=\" + totalPrice +\n            \"&noteText=\" + noteText +\n            \"&token=\" + this.props.userInfo.token +\n            \"&checkoutTime=\" + formattedcheckout_date;\n\n        if (action == \"checkout\") {\n            await fetch('https://script.google.com/macros/s/AKfycby1NCjArXNvliviV9Su8imyfVXsNTUL2memG4bxJhX4JTcyoXGr/exec?func=checkout&id=' + id, {\n                method: 'POST',\n                body: encoded,\n                headers: {\n                    \"Content-type\": \"application/x-www-form-urlencoded\"\n                }\n            }).then(async function (response) {\n                let msgerr = '';\n                let result = [];\n                await response.json().then(function (data) {\n                    data['result'] == 'error' ? msgerr = (JSON.stringify(data[\"error\"][\"message\"]) + JSON.stringify(data[\"error\"])) : result = data['data'];\n                });\n\n                let stt = response.status;\n                if (stt == 200) {\n                    if (!msgerr) {\n                        toast.success(\"Thanh toán \" + roomId + \" thành công!\", {position: toast.POSITION.TOP_RIGHT});\n                    } else {\n                        toast.error(\"Error:\" + JSON.stringify(msgerr));\n                    }\n                } else {\n                    toast.error(\"Something is wrong, please check log for detail!\");\n                }\n\n            }).then(() => {\n                this.handleClearSearching();\n            })\n        }\n    }\n\n    handleClearSearching() {\n        this.setState({\n            roomidselected: '',\n            statusSelected: '',\n        });\n        this.getListRoomDetails();\n        this.getlistoption();\n        this.getroomTypeOther();\n        this.getListStatus();\n    }\n\n    handleChangeRoomIDSelect(event, val = null) {\n        if (val == null)\n            return;\n        this.setState({\n            roomidselected: val['value'],\n            statusSelected: ''\n        }, () => {\n            let filter = {'id': 'roomid', 'value': val['value']};\n            this.getListRoomDetails(filter);\n        });\n    }\n\n    handleChangeStatusIDSelect(event, val = null) {\n        if (val == null)\n            return;\n        this.setState({\n            statusSelected: val['value'],\n            roomidselected: ''\n        }, () => {\n            let filter = {'id': 'status', 'value': val['value']};\n            this.getListRoomDetails(filter);\n        });\n    }\n\n    renderSearchForm() {\n        if (this.state.isLoadedParam == false) {\n            return (<Segment>\n                <Dimmer active inverted>\n                    <Loader size='large'>Đang tải</Loader>\n                </Dimmer>\n                <Image src='images/loader.png'/>\n            </Segment>);\n        }\n\n        let listRoomIds = this.state.roomIds;\n        let listStatusIds = this.state.statusIds;\n        let styleDisable = {'pointerEvents': ''};\n        // debugger;\n        if (!this.state.isLoadedRooms || !this.state.isLoadedParam) {\n            styleDisable = {'pointerEvents': 'none'};\n        }\n\n        if (listRoomIds.length > 0) {\n            listRoomIds.map((item) => {\n                let tmp = {\n                    title: item.key,\n                    description: item.text\n                }\n                item['title'] = item.key;\n                item['description'] = item.text;\n            });\n        }\n        return (\n            <Segment padded style={styleDisable}>\n                <Label attached='top left' onClick={this.handleClearSearching}>Cập nhật lại</Label>\n                <br/>\n                <Form.Group widths='equal'>\n                    <Form.Select\n                        fluid\n                        icon=''\n                        label='Lọc theo Phòng'\n                        value={this.state.roomidselected}\n                        onChange={this.handleChangeRoomIDSelect}\n                        options={listRoomIds}\n                        placeholder='Phòng'\n                    />\n                    <Form.Select\n                        fluid\n                        icon=''\n                        label='Lọc theo trạng thái'\n                        value={this.state.statusSelected}\n                        options={listStatusIds}\n                        onChange={this.handleChangeStatusIDSelect}\n                        placeholder='Trạng thái'\n                    />\n                </Form.Group>\n            </Segment>\n        );\n    }\n\n    renderListRooms() {\n        const {rooms, statusIds, roomTypeOtherIds, listoptionIds, listoption} = {...this.state};\n\n        if (this.state.isLoadedRooms == false) {\n            return (<Segment>\n                <Dimmer active inverted>\n                    <Loader size='large'>Đang tải</Loader>\n                </Dimmer>\n                <Image src='images/loader.png'/>\n            </Segment>);\n        }\n\n        return (\n            <Segment padded>\n                <Label attached='top'>Danh sách phòng:</Label>\n                <ListRoomRows roomsInfo={rooms}\n                              statusList={statusIds}\n                              roomTypeOther={roomTypeOtherIds}\n                              listoptionIds={listoptionIds}\n                              listoption={listoption}\n                              UpdateCheckInRoom={this.UpdateCheckInRoom}\n                              CheckoutRoom={this.CheckoutRoom}\n                />\n            </Segment>\n        );\n    }\n\n    async sha256(message) {\n\n    }\n\n    getIPAddress() {\n        // var https = require('https');\n        // var callback = function(err, ip){\n        //     if(err){\n        //         return console.log(err);\n        //     }\n        //     console.log('Our public IP is', ip);\n        //     // do something here with the IP address\n        // };\n        // https.get({\n        //     host: 'api.ipify.org',\n        // }, function(response) {\n        //     var ip = '';\n        //     response.on('data', function(d) {\n        //         ip += d;\n        //     });\n        //     response.on('end', function() {\n        //         if(ip){\n        //             callback(null, ip);\n        //         } else {\n        //             callback('could not get public ip address :(');\n        //         }\n        //     });\n        // });\n        // sessionStorage.setItem('key', 'value');\n\n        fetch(\"https://api.ipify.org/?format=json\", {\n            method: \"GET\",\n            // body: JSON.stringify(data),\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n        }).then(res => res.json())\n            .then(\n                (result) => {\n                    this.setState({\n                        ipadd: result[\"ip\"],\n                    })\n                }, (error) => {\n                    console.log(error);\n                }\n            )\n    }\n\n    componentDidMount() {\n        this.getIPAddress();\n        this.getListRoomDetails();\n        this.getListStatus();\n        this.getroomTypeOther();\n        this.getlistoption();\n    }\n\n    render() {\n        return (\n            <div>\n                <Form>\n                    {this.renderSearchForm()}\n                    {this.renderListRooms()}\n                </Form>\n                <br/><br/>\n            </div>\n        );\n    }\n}\n\nIndexPage.propTypes = {\n    userInfo: PropTypes.object\n}","export function encrypt(string) {\n\n    function RotateLeft(lValue, iShiftBits) {\n        return (lValue<<iShiftBits) | (lValue>>>(32-iShiftBits));\n    }\n\n    function AddUnsigned(lX,lY) {\n        var lX4,lY4,lX8,lY8,lResult;\n        lX8 = (lX & 0x80000000);\n        lY8 = (lY & 0x80000000);\n        lX4 = (lX & 0x40000000);\n        lY4 = (lY & 0x40000000);\n        lResult = (lX & 0x3FFFFFFF)+(lY & 0x3FFFFFFF);\n        if (lX4 & lY4) {\n            return (lResult ^ 0x80000000 ^ lX8 ^ lY8);\n        }\n        if (lX4 | lY4) {\n            if (lResult & 0x40000000) {\n                return (lResult ^ 0xC0000000 ^ lX8 ^ lY8);\n            } else {\n                return (lResult ^ 0x40000000 ^ lX8 ^ lY8);\n            }\n        } else {\n            return (lResult ^ lX8 ^ lY8);\n        }\n    }\n\n    function F(x,y,z) { return (x & y) | ((~x) & z); }\n    function G(x,y,z) { return (x & z) | (y & (~z)); }\n    function H(x,y,z) { return (x ^ y ^ z); }\n    function I(x,y,z) { return (y ^ (x | (~z))); }\n\n    function FF(a,b,c,d,x,s,ac) {\n        a = AddUnsigned(a, AddUnsigned(AddUnsigned(F(b, c, d), x), ac));\n        return AddUnsigned(RotateLeft(a, s), b);\n    };\n\n    function GG(a,b,c,d,x,s,ac) {\n        a = AddUnsigned(a, AddUnsigned(AddUnsigned(G(b, c, d), x), ac));\n        return AddUnsigned(RotateLeft(a, s), b);\n    };\n\n    function HH(a,b,c,d,x,s,ac) {\n        a = AddUnsigned(a, AddUnsigned(AddUnsigned(H(b, c, d), x), ac));\n        return AddUnsigned(RotateLeft(a, s), b);\n    };\n\n    function II(a,b,c,d,x,s,ac) {\n        a = AddUnsigned(a, AddUnsigned(AddUnsigned(I(b, c, d), x), ac));\n        return AddUnsigned(RotateLeft(a, s), b);\n    };\n\n    function ConvertToWordArray(string) {\n        var lWordCount;\n        var lMessageLength = string.length;\n        var lNumberOfWords_temp1=lMessageLength + 8;\n        var lNumberOfWords_temp2=(lNumberOfWords_temp1-(lNumberOfWords_temp1 % 64))/64;\n        var lNumberOfWords = (lNumberOfWords_temp2+1)*16;\n        var lWordArray=Array(lNumberOfWords-1);\n        var lBytePosition = 0;\n        var lByteCount = 0;\n        while ( lByteCount < lMessageLength ) {\n            lWordCount = (lByteCount-(lByteCount % 4))/4;\n            lBytePosition = (lByteCount % 4)*8;\n            lWordArray[lWordCount] = (lWordArray[lWordCount] | (string.charCodeAt(lByteCount)<<lBytePosition));\n            lByteCount++;\n        }\n        lWordCount = (lByteCount-(lByteCount % 4))/4;\n        lBytePosition = (lByteCount % 4)*8;\n        lWordArray[lWordCount] = lWordArray[lWordCount] | (0x80<<lBytePosition);\n        lWordArray[lNumberOfWords-2] = lMessageLength<<3;\n        lWordArray[lNumberOfWords-1] = lMessageLength>>>29;\n        return lWordArray;\n    };\n\n    function WordToHex(lValue) {\n        var WordToHexValue=\"\",WordToHexValue_temp=\"\",lByte,lCount;\n        for (lCount = 0;lCount<=3;lCount++) {\n            lByte = (lValue>>>(lCount*8)) & 255;\n            WordToHexValue_temp = \"0\" + lByte.toString(16);\n            WordToHexValue = WordToHexValue + WordToHexValue_temp.substr(WordToHexValue_temp.length-2,2);\n        }\n        return WordToHexValue;\n    };\n\n    function Utf8Encode(string) {\n        string = string.replace(/\\r\\n/g,\"\\n\");\n        var utftext = \"\";\n\n        for (var n = 0; n < string.length; n++) {\n\n            var c = string.charCodeAt(n);\n\n            if (c < 128) {\n                utftext += String.fromCharCode(c);\n            }\n            else if((c > 127) && (c < 2048)) {\n                utftext += String.fromCharCode((c >> 6) | 192);\n                utftext += String.fromCharCode((c & 63) | 128);\n            }\n            else {\n                utftext += String.fromCharCode((c >> 12) | 224);\n                utftext += String.fromCharCode(((c >> 6) & 63) | 128);\n                utftext += String.fromCharCode((c & 63) | 128);\n            }\n\n        }\n\n        return utftext;\n    };\n\n    var x=Array();\n    var k,AA,BB,CC,DD,a,b,c,d;\n    var S11=7, S12=12, S13=17, S14=22;\n    var S21=5, S22=9 , S23=14, S24=20;\n    var S31=4, S32=11, S33=16, S34=23;\n    var S41=6, S42=10, S43=15, S44=21;\n\n    string = Utf8Encode(string);\n\n    x = ConvertToWordArray(string);\n\n    a = 0x67452301; b = 0xEFCDAB89; c = 0x98BADCFE; d = 0x10325476;\n\n    for (k=0;k<x.length;k+=16) {\n        AA=a; BB=b; CC=c; DD=d;\n        a=FF(a,b,c,d,x[k+0], S11,0xD76AA478);\n        d=FF(d,a,b,c,x[k+1], S12,0xE8C7B756);\n        c=FF(c,d,a,b,x[k+2], S13,0x242070DB);\n        b=FF(b,c,d,a,x[k+3], S14,0xC1BDCEEE);\n        a=FF(a,b,c,d,x[k+4], S11,0xF57C0FAF);\n        d=FF(d,a,b,c,x[k+5], S12,0x4787C62A);\n        c=FF(c,d,a,b,x[k+6], S13,0xA8304613);\n        b=FF(b,c,d,a,x[k+7], S14,0xFD469501);\n        a=FF(a,b,c,d,x[k+8], S11,0x698098D8);\n        d=FF(d,a,b,c,x[k+9], S12,0x8B44F7AF);\n        c=FF(c,d,a,b,x[k+10],S13,0xFFFF5BB1);\n        b=FF(b,c,d,a,x[k+11],S14,0x895CD7BE);\n        a=FF(a,b,c,d,x[k+12],S11,0x6B901122);\n        d=FF(d,a,b,c,x[k+13],S12,0xFD987193);\n        c=FF(c,d,a,b,x[k+14],S13,0xA679438E);\n        b=FF(b,c,d,a,x[k+15],S14,0x49B40821);\n        a=GG(a,b,c,d,x[k+1], S21,0xF61E2562);\n        d=GG(d,a,b,c,x[k+6], S22,0xC040B340);\n        c=GG(c,d,a,b,x[k+11],S23,0x265E5A51);\n        b=GG(b,c,d,a,x[k+0], S24,0xE9B6C7AA);\n        a=GG(a,b,c,d,x[k+5], S21,0xD62F105D);\n        d=GG(d,a,b,c,x[k+10],S22,0x2441453);\n        c=GG(c,d,a,b,x[k+15],S23,0xD8A1E681);\n        b=GG(b,c,d,a,x[k+4], S24,0xE7D3FBC8);\n        a=GG(a,b,c,d,x[k+9], S21,0x21E1CDE6);\n        d=GG(d,a,b,c,x[k+14],S22,0xC33707D6);\n        c=GG(c,d,a,b,x[k+3], S23,0xF4D50D87);\n        b=GG(b,c,d,a,x[k+8], S24,0x455A14ED);\n        a=GG(a,b,c,d,x[k+13],S21,0xA9E3E905);\n        d=GG(d,a,b,c,x[k+2], S22,0xFCEFA3F8);\n        c=GG(c,d,a,b,x[k+7], S23,0x676F02D9);\n        b=GG(b,c,d,a,x[k+12],S24,0x8D2A4C8A);\n        a=HH(a,b,c,d,x[k+5], S31,0xFFFA3942);\n        d=HH(d,a,b,c,x[k+8], S32,0x8771F681);\n        c=HH(c,d,a,b,x[k+11],S33,0x6D9D6122);\n        b=HH(b,c,d,a,x[k+14],S34,0xFDE5380C);\n        a=HH(a,b,c,d,x[k+1], S31,0xA4BEEA44);\n        d=HH(d,a,b,c,x[k+4], S32,0x4BDECFA9);\n        c=HH(c,d,a,b,x[k+7], S33,0xF6BB4B60);\n        b=HH(b,c,d,a,x[k+10],S34,0xBEBFBC70);\n        a=HH(a,b,c,d,x[k+13],S31,0x289B7EC6);\n        d=HH(d,a,b,c,x[k+0], S32,0xEAA127FA);\n        c=HH(c,d,a,b,x[k+3], S33,0xD4EF3085);\n        b=HH(b,c,d,a,x[k+6], S34,0x4881D05);\n        a=HH(a,b,c,d,x[k+9], S31,0xD9D4D039);\n        d=HH(d,a,b,c,x[k+12],S32,0xE6DB99E5);\n        c=HH(c,d,a,b,x[k+15],S33,0x1FA27CF8);\n        b=HH(b,c,d,a,x[k+2], S34,0xC4AC5665);\n        a=II(a,b,c,d,x[k+0], S41,0xF4292244);\n        d=II(d,a,b,c,x[k+7], S42,0x432AFF97);\n        c=II(c,d,a,b,x[k+14],S43,0xAB9423A7);\n        b=II(b,c,d,a,x[k+5], S44,0xFC93A039);\n        a=II(a,b,c,d,x[k+12],S41,0x655B59C3);\n        d=II(d,a,b,c,x[k+3], S42,0x8F0CCC92);\n        c=II(c,d,a,b,x[k+10],S43,0xFFEFF47D);\n        b=II(b,c,d,a,x[k+1], S44,0x85845DD1);\n        a=II(a,b,c,d,x[k+8], S41,0x6FA87E4F);\n        d=II(d,a,b,c,x[k+15],S42,0xFE2CE6E0);\n        c=II(c,d,a,b,x[k+6], S43,0xA3014314);\n        b=II(b,c,d,a,x[k+13],S44,0x4E0811A1);\n        a=II(a,b,c,d,x[k+4], S41,0xF7537E82);\n        d=II(d,a,b,c,x[k+11],S42,0xBD3AF235);\n        c=II(c,d,a,b,x[k+2], S43,0x2AD7D2BB);\n        b=II(b,c,d,a,x[k+9], S44,0xEB86D391);\n        a=AddUnsigned(a,AA);\n        b=AddUnsigned(b,BB);\n        c=AddUnsigned(c,CC);\n        d=AddUnsigned(d,DD);\n    }\n\n    var temp = WordToHex(a)+WordToHex(b)+WordToHex(c)+WordToHex(d);\n\n    return temp.toLowerCase();\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    Button,\n    Form,\n    Segment,\n} from 'semantic-ui-react';\nimport {encrypt} from '../components/sha256';\nimport {toast} from 'react-toastify';\nimport cookie from 'react-cookies';\n\nexport class LoginPage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            errUserMsg: {\n                content: \"\",\n            },\n            errPassMsg: {\n                content: \"\",\n            },\n            errpinCode: {\n                content: \"\",\n            },\n            userInfo: {\n                token: '',\n                email: '',\n                ipAddress: '',\n                deviceName: '',\n            },\n            userName: '',\n            passWord: '',\n            pinCode: '',\n            isVerified: false,\n            isChecking: false\n        };\n        [\n            'submitLogin',\n            'handleChangeUser',\n            'handleChangePass',\n            'verifyEmail',\n            'handleChangePinCode'\n        ].forEach((method) => this[method] = this[method].bind(this));\n    }\n\n    handleChangePinCode(event, data) {\n        this.setState({\n            pinCode: data.value\n        });\n    }\n\n    handleChangeUser(event, data) {\n        this.setState({\n            userName: data.value\n        });\n    }\n\n    handleChangePass(event, data) {\n        this.setState({\n            passWord: data.value\n        });\n    }\n\n    componentDidMount() {\n\n    }\n\n    verifyEmail() {\n        this.setState({\n            isChecking: true\n        });\n        let username = this.state.userName;\n\n        let encoded = \"email=\" + username +\n            \"&deviceName=\" + this.props.deviceName +\n            \"&ipAddress=\" + this.props.ipAddress;\n\n\n        let isValid = false;\n        fetch('https://script.google.com/macros/s/AKfycby1NCjArXNvliviV9Su8imyfVXsNTUL2memG4bxJhX4JTcyoXGr/exec?func=verifyemail', {\n            method: 'POST',\n            body: encoded,\n            headers: {\"Content-type\": \"application/x-www-form-urlencoded\"}\n        }).then(async function (response) {\n            let msgerr = '';\n            await response.json().then(function (data) {\n\n                data['result'] == 'error' ? msgerr = JSON.stringify(data[\"error\"]) : isValid = true;\n                if (!msgerr) {\n                    toast.success(\"Kiểm tra email để lấy mã PIN.\", {position: toast.POSITION.TOP_RIGHT});\n                } else {\n                    toast.error(msgerr);\n                }\n            });\n        }).then(() => {\n            this.setState({\n                isChecking: false\n            });\n            if (isValid) {\n                this.setState({\n                    isVerified: true\n                });\n            }\n        })\n    }\n\n    submitLogin() {\n        this.setState({\n            isChecking: true\n        });\n\n        let passWordHash = encrypt(this.state.passWord);\n        let username = this.state.userName;\n        let pincode = this.state.pinCode;\n\n        let encoded = \"email=\" + username +\n            \"&pass=\" + passWordHash +\n            \"&pincode=\" + pincode +\n            \"&deviceName=\" + this.props.deviceName +\n            \"&ipAddress=\" + this.props.ipAddress;\n\n\n        let isValid = false;\n        let token = \"\";\n        fetch('https://script.google.com/macros/s/AKfycby1NCjArXNvliviV9Su8imyfVXsNTUL2memG4bxJhX4JTcyoXGr/exec?func=login', {\n            method: 'POST',\n            body: encoded,\n            headers: {\n                \"Content-type\": \"application/x-www-form-urlencoded\"\n            }\n        }).then(async function (response) {\n            let msgerr = '';\n            // debugger;\n            await response.json().then(function (data) {\n\n                data['result'] == 'error' ? msgerr = JSON.stringify(data[\"error\"]) : isValid = true;\n                if (!msgerr) {\n                    token = data['token'];\n                    cookie.remove('tokenTBh', { path: \"/homepage\" });\n                    cookie.remove('emailTBh', { path: \"/homepage\" });\n                    cookie.remove('userNameTBh', { path: \"/homepage\" });\n                    cookie.save('tokenTBh', data['token'], {path: \"/homepage\", maxAge: 1296000});\n                    cookie.save('userNameTBh', (\"Hello \" + data['username']), {path: \"/homepage\", maxAge: 1296000});\n                    cookie.save('emailTBh', username, {path: \"/homepage\", maxAge: 1296000});\n                    toast.success(\"Login Successfully!\", {position: toast.POSITION.TOP_RIGHT});\n                } else {\n                    toast.error(msgerr);\n                }\n            });\n        }).then(() => {\n            this.setState({\n                isChecking: false\n            });\n            if (isValid) {\n                this.props.setTokenValid(username, token);\n            }\n        })\n    }\n\n    render() {\n        return (\n            <Segment>\n                <Form>\n                    <Form.Input\n                        error={this.state.errUserMsg.content != \"\" ? this.state.errUserMsg : null}\n                        fluid\n                        onChange={this.handleChangeUser}\n                        value={this.state.userName}\n                        label='Email:'\n                        name=\"username\"\n                        placeholder='Email@'\n                    />\n                    {this.state.isVerified && <Form.Input\n                        style={{display: this.state.isVerified ? '' : 'none'}}\n                        error={this.state.errPassMsg.length > 0 ? this.state.errPassMsg : null}\n                        fluid\n                        onChange={this.handleChangePass}\n                        value={this.state.passWord}\n                        type=\"password\"\n                        label='Password:'\n                        placeholder='Nhập mật khẩu...'\n                    />}\n\n                    {this.state.isVerified && <Form.Input\n                        error={this.state.errpinCode.length > 0 ? this.state.errpinCode : null}\n                        fluid\n                        onChange={this.handleChangePinCode}\n                        value={this.state.pinCode}\n                        type=\"number\"\n                        label='Mã Pin:'\n                        placeholder='Kiểm tra email để lấy mã Pin...'\n                    />}\n                    {this.state.isVerified ?\n                        <Button fluid size=\"large\" onClick={this.submitLogin} disabled={this.state.isChecking} primary\n                                type='submit'>\n                            Login\n                        </Button>\n                        :\n                        <Button fluid size=\"large\" onClick={this.verifyEmail} disabled={this.state.isChecking} primary\n                                type='submit'>\n                            Kiểm tra\n                        </Button>\n                    }\n                </Form>\n            </Segment>\n        )\n    }\n}\n\nLoginPage.propTypes = {\n    ipAddress: PropTypes.string,\n    deviceName: PropTypes.string,\n    setTokenValid: PropTypes.func\n}\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    Button, Dropdown,\n    Header,\n    Segment,\n    TransitionablePortal, Input, Form\n} from 'semantic-ui-react'\n\nexport default class PortalEditProduct extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: false,\n            isDelete: false,\n            data: this.props.data,\n            field1: '',\n            field2: '',\n            field3: '',\n            field4: '',\n            field5: '',\n            field6: '',\n            field7: '',\n            field8: '',\n            field9: '',\n            field10: '',\n        };\n\n        this.handleSelectAction = this.handleSelectAction.bind(this);\n        this.handleChangeSave = this.handleChangeSave.bind(this);\n        this.handleChangeDelete = this.handleChangeDelete.bind(this);\n    }\n\n\n    handleClick = () => this.setState((prevState) => ({open: !prevState.open}))\n    handleClose = () => this.setState({open: false})\n\n    handleSelectAction(event, data) {\n        this.setState({\n            open: true,\n            isDelete: data.id == 'delete' ? true : false\n        });\n    }\n\n    componentDidMount() {\n        for (let i = 0; i < this.props.data.length; i++) {\n            let tmp = this.props.data[i];\n            Object.values(tmp).map(item => {\n                this.setState({\n                    [\"field\" + (i + 1)]: item,\n                });\n            });\n        }\n    }\n\n    handleChangeSave() {\n        let newrow = [...this.props.data];\n        for (let i = 0; i < newrow.length; i++) {\n            let tmp = newrow[i];\n            tmp[Object.keys(tmp)[0]] = this.state['field' + (i + 1)];\n        }\n\n        this.props.onChangeValue(newrow);\n    }\n\n    handleChangeDelete() {\n        this.props.onChangedelete(this.props.data);\n    }\n\n    render() {\n        const {open} = this.state\n\n        return (\n            <div>\n                <Dropdown icon=\"arrow alternate circle down outline\" text=''\n                          pointing='left' className='link item'>\n                    <Dropdown.Menu>\n                        <Dropdown.Item onClick={this.handleSelectAction}>Edit</Dropdown.Item>\n                        {!(this.props.activeItem == 'RoomPrice' || this.props.activeItem == 'User') ?\n                            <Dropdown.Item onClick={this.handleSelectAction} id=\"delete\">Delete</Dropdown.Item> : ''}\n                    </Dropdown.Menu>\n                </Dropdown>\n                <TransitionablePortal onClose={this.handleClose} open={open}>\n                    <Segment\n                        style={{left: '10%', right: '10%', position: 'fixed', top: '20%'}}\n                    >\n                        <Form>\n                            <div style={{width: '300px', margin: 'auto'}}>\n                                <Header style={{backgroundColor: 'lavender'}}><h3>Detail</h3></Header>\n                                {this.state.isDelete ?\n                                    <div>\n                                        <b>Bạn chắc chắn muốn xoá \"{this.state.field2}\" chứ?</b>\n                                    </div>\n                                    :\n                                    <div><Input labelPosition=\"right\" disabled\n                                                label={this.props.headerRow[0] ? this.props.headerRow[0] : ''}\n                                                fluid id=\"0\"\n                                                placeholder={this.props.headerRow[0] ? this.props.headerRow[0] : ''}\n                                                style={{display: this.props.headerRow[0] ? '' : 'none'}}\n                                                value={this.state.field1}\n                                                onChange={(event, data) => {\n                                                    this.setState({\n                                                        field1: data.value\n                                                    })\n                                                }}/>\n                                        <Input fluid id=\"1\"\n                                               placeholder={this.props.headerRow[1] ? this.props.headerRow[1] : ''}\n                                               labelPosition=\"right\"\n                                               label={this.props.headerRow[1] ? this.props.headerRow[1] : ''}\n                                               style={{display: this.props.headerRow[1] ? '' : 'none'}}\n                                               value={this.state.field2} onChange={(event, data) => {\n                                            this.setState({\n                                                field2: data.value\n                                            })\n                                        }}/>\n                                        {this.props.headerRow[2] != \"Status\" ?\n                                            <Input fluid id=\"2\"\n                                                   placeholder={this.props.headerRow[2] ? this.props.headerRow[2] : ''}\n                                                   labelPosition=\"right\"\n                                                   label={this.props.headerRow[2] ? this.props.headerRow[2] : ''}\n                                                   style={{display: this.props.headerRow[2] ? '' : 'none'}}\n                                                   value={this.state.field3} onChange={(event, data) => {\n                                                this.setState({\n                                                    field3: data.value\n                                                })\n                                            }}/> :\n                                            <Dropdown fluid clearable\n                                                      options={[{key: 'active', text: 'active', value: 'active'},\n                                                          {key: 'inactive', text: 'inactive', value: 'inactive'}]}\n                                                      selection\n                                                      value={this.state.field3} onChange={(event, data) => {\n                                                this.setState({\n                                                    field3: data.value\n                                                })\n                                            }}\n                                            />\n                                        }\n                                        <Input fluid id=\"3\"\n                                               placeholder={this.props.headerRow[3] ? this.props.headerRow[3] : ''}\n                                               labelPosition=\"right\"\n                                               label={this.props.headerRow[3] ? this.props.headerRow[3] : ''}\n                                               style={{display: this.props.headerRow[3] ? '' : 'none'}}\n                                               value={this.state.field4} onChange={(event, data) => {\n                                            this.setState({\n                                                field4: data.value\n                                            })\n                                        }}/>\n                                        <Input fluid id=\"4\"\n                                               placeholder={this.props.headerRow[4] ? this.props.headerRow[4] : ''}\n                                               labelPosition=\"right\"\n                                               label={this.props.headerRow[4] ? this.props.headerRow[4] : ''}\n                                               style={{display: this.props.headerRow[4] ? '' : 'none'}}\n                                               value={this.state.field5} onChange={(event, data) => {\n                                            this.setState({\n                                                field5: data.value\n                                            })\n                                        }}/>\n                                        <Input fluid id=\"5\"\n                                               placeholder={this.props.headerRow[5] ? this.props.headerRow[5] : ''}\n                                               labelPosition=\"right\"\n                                               label={this.props.headerRow[5] ? this.props.headerRow[5] : ''}\n                                               style={{display: this.props.headerRow[5] ? '' : 'none'}}\n                                               value={this.state.field6} onChange={(event, data) => {\n                                            this.setState({\n                                                field6: data.value\n                                            })\n                                        }}/>\n                                        <Input fluid id=\"6\"\n                                               placeholder={this.props.headerRow[6] ? this.props.headerRow[6] : ''}\n                                               labelPosition=\"right\"\n                                               label={this.props.headerRow[6] ? this.props.headerRow[6] : ''}\n                                               style={{display: this.props.headerRow[6] ? '' : 'none'}}\n                                               value={this.state.field7} onChange={(event, data) => {\n                                            this.setState({\n                                                field7: data.value\n                                            })\n                                        }}/>\n                                        <Input fluid id=\"7\"\n                                               placeholder={this.props.headerRow[7] ? this.props.headerRow[7] : ''}\n                                               labelPosition=\"right\"\n                                               label={this.props.headerRow[7] ? this.props.headerRow[7] : ''}\n                                               style={{display: this.props.headerRow[7] ? '' : 'none'}}\n                                               value={this.state.field8} onChange={(event, data) => {\n                                            this.setState({\n                                                field8: data.value\n                                            })\n                                        }}/>\n                                        <Input fluid id=\"8\"\n                                               placeholder={this.props.headerRow[8] ? this.props.headerRow[8] : ''}\n                                               labelPosition=\"right\"\n                                               label={this.props.headerRow[8] ? this.props.headerRow[8] : ''}\n                                               style={{display: this.props.headerRow[8] ? '' : 'none'}}\n                                               value={this.state.field9} onChange={(event, data) => {\n                                            this.setState({\n                                                field9: data.value\n                                            })\n                                        }}/>\n                                        <Input fluid id=\"9\"\n                                               placeholder={this.props.headerRow[9] ? this.props.headerRow[9] : ''}\n                                               labelPosition=\"right\"\n                                               label={this.props.headerRow[9] ? this.props.headerRow[9] : ''}\n                                               style={{display: this.props.headerRow[9] ? '' : 'none'}}\n                                               value={this.state.field10} onChange={(event, data) => {\n                                            this.setState({\n                                                field10: data.value\n                                            })\n                                        }}/>\n                                    </div>\n                                }\n                                <hr/>\n                                <div style={{textAlign: 'center'}}>\n                                    <p>Xem kỹ thông tin trước khi lưu.</p>\n                                    {!this.state.isDelete ?\n                                        <Button color='yellow' basic onClick={this.handleChangeSave}>Lưu</Button> :\n                                        <Button color='yellow' basic onClick={this.handleChangeDelete}>Xoá</Button>}\n                                    <Button color='yellow' basic onClick={this.handleClose}>Đóng</Button>\n                                </div>\n                            </div>\n\n                        </Form>\n                    </Segment>\n                </TransitionablePortal>\n            </div>\n        )\n    }\n}\n\nPortalEditProduct.propTypes = {\n    handleSelectAction: PropTypes.func\n}","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport PropTypes from 'prop-types';\nimport 'semantic-ui-css/semantic.min.css';\nimport {\n    Dimmer, Image,\n    Loader, Segment, Menu, Icon, Button\n} from 'semantic-ui-react';\nimport cookie from 'react-cookies';\nimport Table from 'react-bootstrap/Table';\nimport PortalEditProduct from '../components/admin/PortalEditProduct';\nimport {toast} from 'react-toastify';\nimport {ToastContainer} from \"react-toastify\";\nimport {encrypt} from \"../components/sha256\";\n\nconst isMobile = {\n    CheckDevices: function () {\n        if (navigator.userAgent.match(/Android/i)) {\n            return \"Android\"\n        }\n        ;\n        if (navigator.userAgent.match(/iPhone|iPad|iPod/i)) {\n            return \"iOS\"\n        }\n        ;\n        if (navigator.userAgent.match(/Windows/i)) {\n            return \"Windows\"\n        }\n        ;\n        if (navigator.userAgent.match(/Mac/i)) {\n            return \"Mac\"\n        }\n        ;\n        if (navigator.userAgent.match(/BlackBerry/i)) {\n            return \"BlackBerry\"\n        }\n        ;\n    },\n};\n\nfunction formatNumber(num) {\n    return num.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,');\n}\n\nexport class AdminPage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isTokenValid: false,\n            userInfo: {\n                token: cookie.load('tokenTBh'),\n                email: cookie.load('emailTBh'),\n                ipAddress: \"\",\n                deviceName: isMobile.CheckDevices()\n            },\n            isChecking: true,\n            activeItem: \"\",\n            headerRow: [],\n            bodyRow: [],\n            isDataLoaded: false,\n            isSubmiting: false\n        };\n        [\n            'checkTokenValid',\n            'getIPAndCheckToken',\n            'renderListFunc',\n            'renderProductList',\n            'handleChangeRowValue',\n            'handleItemClick',\n            'getDataAdminByAction',\n            'getListAdminEdit',\n            'addItemProduct',\n            'handleDeleteRow',\n            'handleSubmitAllChange'\n        ].forEach((method) => this[method] = this[method].bind(this));\n    }\n\n    getIPAndCheckToken() {\n        this.setState({\n            isChecking: true,\n        });\n        fetch(\"https://api.ipify.org/?format=json\", {\n            method: \"GET\",\n            // body: JSON.stringify(data),\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n        }).then(res => res.json())\n            .then(\n                (result) => {\n                    let userInfo = {...this.state.userInfo};\n                    userInfo['ipAddress'] = result[\"ip\"]\n                    this.setState({\n                        userInfo: userInfo\n                    });\n\n                    if (!this.state.userInfo.token) {\n                        this.setState({\n                            isChecking: false\n                        });\n                        return;\n                    }\n\n                    this.checkTokenValid(result[\"ip\"])\n                }, (error) => {\n                    console.log(error);\n                }\n            )\n    }\n\n    async checkTokenValid(ipAddress) {\n        let encoded = \"token=\" + this.state.userInfo.token +\n            \"&email=\" + this.state.userInfo.email +\n            \"&deviceName=\" + this.state.userInfo.deviceName +\n            \"&role=admin\" +\n            \"&ipAddress=\" + ipAddress;\n\n        let isValid = false;\n        fetch('https://script.google.com/macros/s/AKfycby1NCjArXNvliviV9Su8imyfVXsNTUL2memG4bxJhX4JTcyoXGr/exec?func=checkToken', {\n            method: 'POST',\n            body: encoded,\n            headers: {\n                \"Content-type\": \"application/x-www-form-urlencoded\"\n            }\n        }).then(async function (response) {\n            let msgerr = '';\n            await response.json().then(function (data) {\n                data['result'] == 'error' ? msgerr = JSON.stringify(data[\"error\"]) : isValid = true;\n            });\n        }).then(() => {\n            if (isValid) {\n                this.setState({\n                    isTokenValid: true,\n                    isChecking: false\n                });\n            } else {\n                this.setState({\n                    isTokenValid: false,\n                    isChecking: false\n                });\n            }\n        })\n    }\n\n    componentDidMount() {\n        if (!this.state.userInfo.token) {\n            this.setState({\n                isTokenValid: false,\n                isChecking: false\n            });\n        }\n        this.getIPAndCheckToken();\n    }\n\n    clearCookie() {\n        cookie.remove('tokenTBh', {path: \"/homepage\"});\n        cookie.remove('emailTBh', {path: \"/homepage\"});\n        cookie.remove('userNameTBh', {path: \"/homepage\"});\n    }\n\n    getListAdminEdit(action) {\n        this.setState({\n            isDataLoaded: false,\n        });\n        fetch(\"https://script.google.com/macros/s/AKfycby1NCjArXNvliviV9Su8imyfVXsNTUL2memG4bxJhX4JTcyoXGr/exec?func=\" + action + \"&token=\" + this.state.userInfo.token)\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    let strs = [];\n                    let tmp = [];\n                    for (let i = 0; i < result.length; i++) {\n                        tmp = JSON.parse(result[i])\n                        strs.push(tmp);\n                    }\n                    // strs = new Set(strs);\n                    strs = Array.from(new Set(strs.map(JSON.stringify))).map(JSON.parse);\n                    let rowheader = Object.keys(strs[0]);\n\n                    this.setState({\n                        isDataLoaded: true,\n                        headerRow: rowheader,\n                        bodyRow: strs\n                    });\n                }, (error) => {\n                    console.log(error);\n                    this.setState({\n                        isDataLoaded: true,\n                        bodyRow: [],\n                        headerRow: []\n                    });\n                }\n            ).then(() => {\n            this.setState({\n                isDataLoaded: true\n            });\n        })\n    }\n\n    getDataAdminByAction(tblName) {\n        switch (tblName) {\n            case \"Hotel\":\n                this.getListAdminEdit(\"listRoomDetail\");\n                break;\n            case \"FoodOption\":\n                this.getListAdminEdit(\"listoption\");\n                break;\n            case \"RoomsType\":\n                this.getListAdminEdit(\"PricebyOthers\");\n                break;\n            case \"RoomPrice\":\n                this.getListAdminEdit(\"PricebyHour\");\n                break;\n            case \"User\":\n                this.getListAdminEdit(\"listUser\");\n                break;\n        }\n    }\n\n    handleItemClick(e, {name}) {\n        this.setState({\n            activeItem: name,\n            bodyRow: [],\n            headerRow: []\n        });\n\n        if (name.match(/Hotel|FoodOption|RoomPrice|RoomsType|User|/i)) {\n            this.getDataAdminByAction(name);\n        }\n    }\n\n    handleDeleteRow(data) {\n        if (this.state.bodyRow.length == 1) {\n            toast.error(\"Bạn không được xoá hết.\");\n            return;\n        }\n        let bodyRow = [...this.state.bodyRow];\n        let removeIndex = bodyRow.map(function (item) {\n            return item[Object.keys(data[0])[0]];\n        }).indexOf(Object.values(data[0])[0]);\n        bodyRow.splice(removeIndex, 1);\n\n        this.setState({\n            bodyRow: bodyRow\n        });\n    }\n\n    handleChangeRowValue(newrow) {\n        let bodyRow = [...this.state.bodyRow];\n        for (let i = 0; i < bodyRow.length; i++) {\n            if (Object.keys(bodyRow[i])[0] == Object.keys(newrow)[0] && Object.values(bodyRow[i])[0] == Object.values(newrow)[0]) {\n                bodyRow[i] = newrow\n            }\n        }\n        this.setState({\n            bodyRow: bodyRow\n        });\n    }\n\n    handleAction(action, data) {\n\n    }\n\n    addItemProduct() {\n        if (!(this.state.activeItem == 'Hotel' || this.state.activeItem == 'FoodOption' || this.state.activeItem == 'RoomsType')) {\n            toast.error(\"Liên hệ với Bangth để thêm.\");\n            return;\n        }\n        let bodyRow = this.state.bodyRow;\n        let row = {...bodyRow[bodyRow.length - 1]};\n        Object.keys(row).map(item => {\n            if (item.includes(\"id\") || item.includes(\"Id\")) {\n                row[item] = row[item] + 1;\n            } else {\n                row[item] = '';\n            }\n        });\n\n        bodyRow[bodyRow.length] = row;\n        this.setState({\n            bodyRow: bodyRow\n        })\n    }\n\n    handleSubmitAllChange() {\n        this.setState({\n            isSubmiting: true\n        });\n        let jsonString = JSON.stringify(this.state.bodyRow.map(item => {\n                return JSON.stringify(item);\n            })\n        );\n        if (this.state.activeItem == 'User') {\n            let bodyRow = [...this.state.bodyRow]\n\n            for (let i = 0; i < bodyRow.length; i++) {\n                let row = bodyRow[i];\n                if (row.PassWord && row.PassWord != \"\") {\n                    bodyRow[i].PassWord = encrypt(row.PassWord);\n                }\n            }\n            jsonString = JSON.stringify(bodyRow.map(item => {\n                    return JSON.stringify(item);\n                })\n            );\n\n        }\n\n        let encoded = \"jsonDataEncode=\" + jsonString +\n            \"&token=\" + this.state.userInfo.token +\n            \"&activeItem=\" + this.state.activeItem;\n\n        fetch('https://script.google.com/macros/s/AKfycby1NCjArXNvliviV9Su8imyfVXsNTUL2memG4bxJhX4JTcyoXGr/exec?func=adminUpdateParam', {\n            method: 'POST',\n            body: encoded,\n            headers: {\n                \"Content-type\": \"application/x-www-form-urlencoded\"\n            }\n        }).then(async function (response) {\n            let msgerr = '';\n            let isSuccess = false;\n            await response.json().then(function (data) {\n                data['result'] == 'error' ? msgerr = (JSON.stringify(data[\"error\"][\"message\"]) + JSON.stringify(data[\"error\"])) : isSuccess = true;\n            });\n\n            let stt = response.status;\n            if (stt == 200) {\n                if (!msgerr) {\n                    toast.success(\"Lưu thành công!\", {position: toast.POSITION.TOP_RIGHT});\n                } else {\n                    toast.error(\"Error:\" + JSON.stringify(msgerr));\n                }\n            } else {\n                toast.error(\"Something is wrong, please check log for detail!\");\n            }\n\n        }).then(() => {\n            this.setState({isSubmiting: false});\n        })\n    }\n\n    renderProductList() {\n        return (\n            <Table responsive bordered hover style={{height: '300px'}}>\n                <thead>\n                <tr key=\"header\">\n                    <th>\n                        <Button.Group\n                            style={{display: (this.state.activeItem == 'Hotel' || this.state.activeItem == 'FoodOption' || this.state.activeItem == 'RoomsType') ? '' : 'none'}}>\n                            <Button positive inverted color='teal'\n                                    onClick={this.addItemProduct}>\n                                Thêm\n                            </Button>\n                            {/*<Button.Or/>*/}\n                            {/*<Button inverted color='grey'>Delete</Button>*/}\n                        </Button.Group>\n                    </th>\n                    {this.state.headerRow.map(item => {\n                        return <th key={item}>{item}</th>\n                    })\n                    }\n                </tr>\n                </thead>\n                <tbody>\n                {\n                    this.state.bodyRow.map(item => {\n                        return <RowRender onChange={this.handleChangeRowValue}\n                                          onDelete={this.handleDeleteRow}\n                                          headerRow={this.state.headerRow}\n                                          onAction={this.handleAction}\n                                          activeItem={this.state.activeItem}\n                                          key={item + Math.random()}>{item}</RowRender>\n                    })\n                }\n                </tbody>\n                <tfoot>\n                <tr>\n                    <td colSpan={this.state.headerRow.length + 1} hidden={this.state.headerRow.length <= 0}\n                        onClick={this.handleSubmitAllChange}><Button\n                        primary>Lưu tất cả thay đổi</Button></td>\n                </tr>\n                </tfoot>\n            </Table>\n        );\n    }\n\n    renderListFunc() {\n        let activeItem = this.state.activeItem;\n        return (\n            <Segment>\n                <ToastContainer style={{fontSize: '20px', textAlign: 'center'}}/>\n                <Menu tabular widths=\"5\" icon='labeled'\n                      size={isMobile.CheckDevices().match(/Windows|Mac/i) ? 'massive' : 'mini'} compact>\n                    <Menu.Item\n                        name='Hotel'\n                        active={activeItem === 'Hotel'}\n                        onClick={this.handleItemClick}\n                    >\n                        <Icon name='building outline'/>\n                        Hotel\n                    </Menu.Item>\n                    <Menu.Item\n                        name='FoodOption'\n                        active={activeItem === 'FoodOption'}\n                        onClick={this.handleItemClick}\n                    >\n                        <Icon><i className=\"fas fa-utensils\"></i></Icon>\n                        Drink & Food\n                    </Menu.Item>\n                    <Menu.Item\n                        name='RoomPrice'\n                        active={activeItem === 'RoomPrice'}\n                        onClick={this.handleItemClick}\n                    >\n                        <Icon name=''><i className=\"fas fa-user-clock\"></i></Icon>\n                        Price-Hour\n                    </Menu.Item>\n                    <Menu.Item\n                        name='RoomsType'\n                        active={activeItem === 'RoomsType'}\n                        onClick={this.handleItemClick}\n                    >\n                        <Icon name=''><i className=\"fas fa-bed\"></i></Icon>\n                        Room-Types\n                    </Menu.Item>\n                    <Menu.Item\n                        name='User'\n                        active={activeItem === 'User'}\n                        onClick={this.handleItemClick}\n                    >\n                        <Icon name=''><i className=\"fas fa-user-shield\"></i></Icon>\n                        User\n                    </Menu.Item>\n                </Menu>\n                {this.state.activeItem.length > 0 &&\n                <Segment>\n                    {(this.state.isDataLoaded == true && this.state.activeItem.length > 0) ?\n                        <div>\n                            <div style={{display: this.state.isSubmiting ? 'none' : ''}}>\n                                {this.renderProductList()}\n                            </div>\n                            <div style={{display: !this.state.isSubmiting ? 'none' : ''}}>\n                                <Dimmer active inverted>\n                                    <Loader size='large'>Dữ liệu đang được đồng bộ...</Loader>\n                                </Dimmer>\n                                <Image src='images/loader.png'/>\n                            </div>\n                        </div>\n                        :\n                        <Segment>\n                            <Dimmer active inverted>\n                                <Loader size='large'>Đang tải</Loader>\n                            </Dimmer>\n                            <Image src='images/loader.png'/>\n                        </Segment>\n                    }\n                </Segment>}\n                <a href=\"/homepage\">Back to Home</a>\n            </Segment>\n        )\n    }\n\n    render() {\n        let isTokenValid = this.state.isTokenValid;\n        if (this.state.isChecking) {\n            return <Segment>\n                <Dimmer active inverted>\n                    <Loader size='large'>Hệ thống đang kiểm tra người dùng...</Loader>\n                </Dimmer>\n                <Image src='images/loader.png'/>\n            </Segment>\n        }\n\n        return (isTokenValid ?\n            this.renderListFunc()\n            :\n            <div>\n                Please <a href=\"/homepage\" onClick={this.clearCookie}>Login</a> by User Addmin to access this Page\n            </div>);\n    }\n}\n\nclass RowRender extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            colls: [],\n        };\n        this.handleChangeColl = this.handleChangeColl.bind(this);\n        this.handleSelectAction = this.handleSelectAction.bind(this);\n        this.handleChangeDeleteColl = this.handleChangeDeleteColl.bind(this);\n    }\n\n    componentDidMount() {\n        let cells = Object.keys(this.props.children).map((i) => {\n            return {[i]: this.props.children[i]}\n        })\n        this.setState({\n            colls: cells\n        });\n    }\n\n    handleChangeDeleteColl(data) {\n        this.props.onDelete(data);\n    }\n\n    handleChangeColl(coll) {\n        let tmprow = [...this.state.colls];\n        let newrow = {};\n        for (let i = 0; i < tmprow.length; i++) {\n            if (Object.keys(tmprow[i])[0] == Object.keys(coll)[0]) {\n                tmprow[i] = coll;\n            }\n            newrow[Object.keys(tmprow[i])[0]] = Object.values(tmprow[i])[0];\n        }\n\n        this.props.onChange(newrow);\n    }\n\n    handleSelectAction(event, data) {\n        this.props.onAction(data.children, this.props.children)\n    }\n\n    render() {\n        let row = this.props.children;\n        return (\n            <tr key={row + Math.random()}>\n                <td>\n                    <PortalEditProduct headerRow={this.props.headerRow} data={this.state.colls}\n                                       activeItem={this.props.activeItem}\n                                       handleSelectAction={this.handleSelectAction}\n                                       onChangedelete={this.handleChangeDeleteColl}\n                                       onChangeValue={this.handleChangeColl}/>\n                </td>\n                {\n                    this.state.colls.map(coll => {\n                        return <CollRender key={coll + Math.random()}\n                                           onChangeValue={this.handleChangeColl}>{coll}</CollRender>\n                    })\n                }\n            </tr>\n        )\n    }\n}\n\nclass CollRender extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            coll: this.props.children\n        }\n        this.handleChangeInput = this.handleChangeInput.bind(this);\n    }\n\n    componentDidMount() {\n    }\n\n    handleChangeInput(event, data) {\n        let coll = {...this.state.coll};\n        coll[Object.keys(this.state.coll)[0]] = data.value;\n        this.props.onChangeValue(coll);\n    }\n\n    render() {\n        return (\n            <td key={this.state.coll + Math.random()}>\n                {/*<Input value={Object.values(this.state.coll)} onChange={this.handleChangeInput}/>*/}\n                <p>{isNaN(Object.values(this.state.coll)) ? Object.values(this.state.coll) : formatNumber(Object.values(this.state.coll))}</p>\n            </td>\n        )\n    }\n}\n\nCollRender.propTypes = {\n    onChangeValue: PropTypes.func\n}\nAdminPage.propTypes = {}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {IndexPage} from './containers/IndexPage';\nimport {LoginPage} from './containers/LoginPage';\nimport {AdminPage} from './containers/AdminPage';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'semantic-ui-css/semantic.min.css';\nimport {\n    Dimmer, Image,\n    Loader, Segment\n} from 'semantic-ui-react';\nimport {ToastContainer} from \"react-toastify\";\nimport cookie from 'react-cookies';\nimport {BrowserRouter, Route} from \"react-router-dom\";\n\nconst isMobile = {\n    CheckDevices: function () {\n        if (navigator.userAgent.match(/Android/i)) {\n            return \"Android\"\n        }\n        ;\n        if (navigator.userAgent.match(/iPhone|iPad|iPod/i)) {\n            return \"iOS\"\n        }\n        ;\n        if (navigator.userAgent.match(/Windows/i)) {\n            return \"Windows\"\n        }\n        ;\n        if (navigator.userAgent.match(/Mac/i)) {\n            return \"Mac\"\n        }\n        ;\n        if (navigator.userAgent.match(/BlackBerry/i)) {\n            return \"BlackBerry\"\n        }\n        ;\n    },\n};\n\nclass ThaiBinhHotel extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isTokenValid: false,\n            userInfo: {\n                token: cookie.load('tokenTBh'),\n                email: cookie.load('emailTBh'),\n                // token: sessionStorage.getItem('tokenTBh'),\n                // email: sessionStorage.getItem('emailTBh'),\n                ipAddress: \"\",\n                deviceName: isMobile.CheckDevices()\n            },\n            isChecking: true,\n        };\n        [\n            'checkTokenValid',\n            'getIPAndCheckToken',\n            'setTokenValid'\n        ].forEach((method) => this[method] = this[method].bind(this));\n    }\n\n    setTokenValid(username, token) {\n        let userInfo = {...this.state.userInfo};\n        userInfo.email = username;\n        userInfo.token = token;\n        this.setState({\n            isTokenValid: true,\n            userInfo: userInfo\n        });\n        ReactDOM.render(<GreetUser/>, document.getElementById('userinfo'));\n        ReactDOM.render(<AcctionBottom/>, document.getElementById('actionbottom'));\n    }\n\n    getIPAndCheckToken() {\n        this.setState({\n            isChecking: true,\n        });\n        fetch(\"https://api.ipify.org/?format=json\", {\n            method: \"GET\",\n            // body: JSON.stringify(data),\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n        }).then(res => res.json())\n            .then(\n                (result) => {\n                    let userInfo = {...this.state.userInfo};\n                    userInfo['ipAddress'] = result[\"ip\"]\n                    this.setState({\n                        userInfo: userInfo\n                    });\n\n                    if (!this.state.userInfo.token) {\n                        this.setState({\n                            isChecking: false\n                        });\n                        return;\n                    }\n\n                    this.checkTokenValid(result[\"ip\"])\n                }, (error) => {\n                    console.log(error);\n                }\n            )\n    }\n\n    async checkTokenValid(ipAddress) {\n        let encoded = \"token=\" + this.state.userInfo.token +\n            \"&email=\" + this.state.userInfo.email +\n            \"&deviceName=\" + this.state.userInfo.deviceName +\n            \"&ipAddress=\" + ipAddress;\n        let isValid = false;\n        fetch('https://script.google.com/macros/s/AKfycby1NCjArXNvliviV9Su8imyfVXsNTUL2memG4bxJhX4JTcyoXGr/exec?func=checkToken', {\n            method: 'POST',\n            body: encoded,\n            headers: {\n                \"Content-type\": \"application/x-www-form-urlencoded\"\n            }\n        }).then(async function (response) {\n            let msgerr = '';\n            await response.json().then(function (data) {\n                data['result'] == 'error' ? msgerr = JSON.stringify(data[\"error\"]) : isValid = true;\n            });\n        }).then(() => {\n            if (isValid) {\n                this.setState({\n                    isTokenValid: true,\n                    isChecking: false\n                });\n            } else {\n                this.setState({\n                    isTokenValid: false,\n                    isChecking: false\n                });\n            }\n        })\n    }\n\n    componentDidMount() {\n        if (!this.state.userInfo.token) {\n            this.setState({\n                isTokenValid: false,\n                isChecking: false\n            });\n        }\n        this.getIPAndCheckToken();\n    }\n\n    render() {\n        let isTokenValid = this.state.isTokenValid;\n        if (this.state.isChecking) {\n            return <Segment>\n                <Dimmer active inverted>\n                    <Loader size='large'>Hệ thống đang kiểm tra người dùng</Loader>\n                </Dimmer>\n                <Image src='images/loader.png'/>\n            </Segment>\n        }\n        return (\n            <div>\n                <ToastContainer style={{fontSize: '20px', textAlign: 'center'}}/>\n                {isTokenValid ?\n                    <IndexPage userInfo={this.state.userInfo}/>\n                    :\n                    <LoginPage deviceName={this.state.userInfo.deviceName} ipAddress={this.state.userInfo.ipAddress}\n                               setTokenValid={this.setTokenValid}/>}\n            </div>\n        )\n    }\n}\n\nclass AppMain extends React.Component {\n    render() {\n        return (\n            <BrowserRouter>\n                <div>\n                    <hr/>\n                    <div>\n                        <Route exact path=\"/homepage\" component={ThaiBinhHotel}/>\n                        <Route path=\"/homepage/admin\" component={admin}/>\n                        <Route path=\"/homepage/logout\" component={logout}/>\n                    </div>\n                </div>\n            </BrowserRouter>\n        );\n    }\n}\n\nclass logout extends React.Component {\n    render() {\n        cookie.remove('tokenTBh', {path: '/homepage'});\n        cookie.remove('emailTBh', {path: '/homepage'});\n        cookie.remove('userNameTBh', {path: '/homepage'});\n        window.location.href = \"/homepage\";\n        return \"\";\n    }\n}\n\nclass admin extends React.Component {\n    render() {\n        return (\n            <AdminPage/>\n        );\n    }\n}\n\nclass GreetUser extends React.Component {\n    render() {\n        let info = cookie.load(\"userNameTBh\");\n        return (\n            info ?\n                <div>\n                    {info}\n                    <a href=\"/homepage/logout\"><h6>Thoát</h6></a>\n                </div>\n                :\n                <div>\n                    Hi Guess!\n                </div>\n        );\n    }\n}\n\nclass AcctionBottom extends React.Component {\n    render() {\n        let info = cookie.load(\"tokenTBh\");\n        return (\n            info ?\n                <div>\n                    <ul className=\"icons\">\n                        <li><a\n                            href=\"https://docs.google.com/spreadsheets/d/1ZRQ1m7W-rKciypYBbtgSswODZj8qdOWmW2JLb6GTVX8/\"\n                            target=\"_blank\" className=\"icon brands fa-google-drive\"><span className=\"label\"></span></a>\n                        </li>\n                        <li><a href=\"/homepage\" className=\"icon solid fa-home\"><span className=\"label\"></span></a></li>\n                        <li><a href=\"/homepage/admin\" className=\"fas fa-tools\"><span className=\"label\"></span></a></li>\n                    </ul>\n                </div>\n                :\n                <div>\n                </div>\n        );\n    }\n}\n\n\nReactDOM.render(<AppMain/>, document.getElementById('root'));\nReactDOM.render(<GreetUser/>, document.getElementById('userinfo'));\nReactDOM.render(<AcctionBottom/>, document.getElementById('actionbottom'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\nserviceWorker.register();\n"],"sourceRoot":""}